{"generator":"Code Snippets v3.7.0","date_created":"2025-09-15 14:40","snippets":[{"id":100,"name":"25-Charter-Ajax-Handlers","code":"\/**\n * ============================================================================\n * Snippet: 25-Charter-Ajax-Handlers\n * Title: \u5305\u8eca\u670d\u52d9 AJAX \u8655\u7406\u5668\n * Description: \u8655\u7406\u5305\u8eca\u670d\u52d9\u7684\u6240\u6709 AJAX \u8acb\u6c42\uff0c\u6574\u5408 20-24 \u6a21\u7d44\u529f\u80fd\n * Version: 1.0.0\n * Author: 9o Van Development Team\n * Created: 2025-09-14\n * Modified: 2025-09-14\n * Priority: 25\n * Dependencies: 20-Charter-Settings, 21-Charter-PostType, 22-Charter-Database, \n *               23-Charter-Calculator, 24-Charter-Validator\n * Hook: Run everywhere\n * ============================================================================\n *\/\n\n\/\/ \u9632\u6b62\u76f4\u63a5\u8a2a\u554f\nif (!defined('ABSPATH')) {\n    exit;\n}\n\n\/\/ \u6aa2\u67e5\u4f9d\u8cf4\nif (!class_exists('NineOVan_Charter_Settings') || \n    !class_exists('NineOVan_Charter_Validator') ||\n    !class_exists('NineOVan_Charter_Database')) {\n    error_log('[25-Charter-Ajax-Handlers] \u932f\u8aa4\uff1a\u7f3a\u5c11\u5fc5\u8981\u7684\u4f9d\u8cf4\u985e\u5225');\n    return;\n}\n\n\/**\n * \u5305\u8eca AJAX \u8655\u7406\u5668\u985e\u5225\n *\/\nclass NineOVan_Charter_Ajax_Handlers {\n    \n    private static $instance = null;\n    private $validator;\n    private $database;\n    private $settings;\n    \n    \/**\n     * \u53d6\u5f97\u55ae\u4f8b\u5be6\u4f8b\n     *\/\n    public static function get_instance() {\n        if (null === self::$instance) {\n            self::$instance = new self();\n        }\n        return self::$instance;\n    }\n    \n    \/**\n     * \u5efa\u69cb\u51fd\u5f0f\n     *\/\n    private function __construct() {\n        $this->validator = NineOVan_Charter_Validator::get_instance();\n        $this->database = NineOVan_Charter_Database::get_instance();\n        $this->settings = NineOVan_Charter_Settings::get_instance();\n        \n        $this->init_hooks();\n    }\n    \n    \/**\n     * \u521d\u59cb\u5316\u9264\u5b50\n     *\/\n    private function init_hooks() {\n        \/\/ \u50f9\u683c\u8a08\u7b97\uff08\u8207 legacy \u76f8\u5bb9\uff09\n        add_action('wp_ajax_calculate_charter_price', array($this, 'handle_price_calculation'));\n        add_action('wp_ajax_nopriv_calculate_charter_price', array($this, 'handle_price_calculation'));\n        \n        \/\/ \u5730\u5740\u81ea\u52d5\u5b8c\u6210\uff08\u8207 legacy \u76f8\u5bb9\uff09\n        add_action('wp_ajax_autocomplete_address', array($this, 'handle_address_autocomplete'));\n        add_action('wp_ajax_nopriv_autocomplete_address', array($this, 'handle_address_autocomplete'));\n        \n        \/\/ \u5730\u5740\u9a57\u8b49\uff08\u8207 legacy \u76f8\u5bb9\uff09\n        add_action('wp_ajax_validate_address', array($this, 'handle_address_validation'));\n        add_action('wp_ajax_nopriv_validate_address', array($this, 'handle_address_validation'));\n        \n        \/\/ \u9810\u7d04\u63d0\u4ea4\uff08\u8207 legacy \u76f8\u5bb9\uff09\n        add_action('wp_ajax_submit_charter_booking', array($this, 'handle_booking_submission'));\n        add_action('wp_ajax_nopriv_submit_charter_booking', array($this, 'handle_booking_submission'));\n        \n        \/\/ \u65b0\u589e\uff1a\u6aa2\u67e5\u9810\u7d04\u885d\u7a81\n        add_action('wp_ajax_check_charter_availability', array($this, 'handle_availability_check'));\n        add_action('wp_ajax_nopriv_check_charter_availability', array($this, 'handle_availability_check'));\n        \n        \/\/ \u65b0\u589e\uff1a\u53d6\u5f97\u9810\u7d04\u72c0\u614b\n        add_action('wp_ajax_get_charter_booking_status', array($this, 'handle_get_booking_status'));\n        add_action('wp_ajax_nopriv_get_charter_booking_status', array($this, 'handle_get_booking_status'));\n        \n        \/\/ \u7ba1\u7406\u54e1\u5c08\u7528\n        add_action('wp_ajax_update_charter_status', array($this, 'handle_status_update'));\n        add_action('wp_ajax_export_charter_bookings', array($this, 'handle_export_bookings'));\n    }\n    \n    \/**\n     * \u8655\u7406\u50f9\u683c\u8a08\u7b97 - \u4fee\u6b63\u7248\n     * \u8207 legacy \u7cfb\u7d71\u5b8c\u5168\u76f8\u5bb9\uff0c\u4f46\u4f7f\u7528\u65b0\u7684\u6a21\u7d44\u5316\u67b6\u69cb\n     *\/\n    public function handle_price_calculation() {\n        try {\n            \/\/ \u6536\u96c6\u8cc7\u6599\n            $trip_days = isset($_POST['trip_days']) ? intval($_POST['trip_days']) : 1;\n            $trip_days = max(1, min(7, $trip_days));\n            \n            $passengers = isset($_POST['passengers']) ? intval($_POST['passengers']) : 1;\n            $child_seats = isset($_POST['child_seats']) ? intval($_POST['child_seats']) : 0;\n            $booster_seats = isset($_POST['booster_seats']) ? intval($_POST['booster_seats']) : 0;\n            \n            \/\/ \u53f8\u6a5f\u88dc\u8cbc\n            $driver_accommodation = isset($_POST['driver_accommodation']) ? $_POST['driver_accommodation'] : 'self';\n            $driver_meals = isset($_POST['driver_meals']) ? $_POST['driver_meals'] : 'provided';\n            \n            \/\/ \u89e3\u6790\u6bcf\u65e5\u884c\u7a0b\n            $daily_routes = array();\n            if (!empty($_POST['daily_routes'])) {\n                $decoded = json_decode(stripslashes($_POST['daily_routes']), true);\n                if (is_array($decoded)) {\n                    $daily_routes = $decoded;\n                }\n            }\n            \n            \/\/ \u50f9\u683c\u660e\u7d30\n            $breakdown = array();\n            $subtotal = 0;\n            \n            \/\/ ====================================\n            \/\/ 1. \u57fa\u672c\u8cbb\u7528\u8a08\u7b97\uff08\u4fee\u6b63\u7248\uff09\n            \/\/ ====================================\n            $base_daily_rate = 12000; \/\/ \u9810\u8a2d\u5609\u7fa9(\u542b)\u4ee5\u5317\n            $is_south = false;\n            $detected_areas = array();\n            \n            \/\/ \u6aa2\u67e5\u662f\u5426\u6709\u4efb\u4f55\u6709\u6548\u7684\u5730\u5740\u8f38\u5165\n            $has_valid_route = false;\n            foreach ($daily_routes as $route) {\n                if (!empty($route['origin']) || !empty($route['destination']) || !empty($route['stops'])) {\n                    $has_valid_route = true;\n                    break;\n                }\n            }\n            \n            \/\/ \u53ea\u6709\u5728\u6709\u6709\u6548\u8def\u7dda\u6642\u624d\u6aa2\u67e5\u5357\u5317\u5340\u57df\n            if ($has_valid_route) {\n                foreach ($daily_routes as $route) {\n                    \/\/ \u6aa2\u67e5\u8d77\u9ede\n                    if (!empty($route['origin'])) {\n                        $origin_rate = $this->get_city_base_rate($route['origin']);\n                        if ($origin_rate == 14000) {\n                            $is_south = true;\n                            $base_daily_rate = 14000;\n                            $detected_areas[] = $this->detect_city($route['origin']);\n                        }\n                    }\n                    \n                    \/\/ \u6aa2\u67e5\u7d42\u9ede\n                    if (!empty($route['destination'])) {\n                        $dest_rate = $this->get_city_base_rate($route['destination']);\n                        if ($dest_rate == 14000) {\n                            $is_south = true;\n                            $base_daily_rate = 14000;\n                            $detected_areas[] = $this->detect_city($route['destination']);\n                        }\n                    }\n                    \n                    \/\/ \u6aa2\u67e5\u505c\u9760\u9ede\n                    if (!empty($route['stops']) && is_array($route['stops'])) {\n                        foreach ($route['stops'] as $stop) {\n                            if (!empty($stop)) {\n                                $stop_rate = $this->get_city_base_rate($stop);\n                                if ($stop_rate == 14000) {\n                                    $is_south = true;\n                                    $base_daily_rate = 14000;\n                                    $detected_areas[] = $this->detect_city($stop);\n                                }\n                            }\n                        }\n                    }\n                    \n                    \/\/ \u5982\u679c\u5df2\u78ba\u5b9a\u662f\u5357\u90e8\u50f9\u683c\uff0c\u5c31\u4e0d\u7528\u518d\u6aa2\u67e5\u4e86\n                    if ($is_south) {\n                        break;\n                    }\n                }\n            }\n            \n            \/\/ \u591a\u65e5\u512a\u60e0\u8a08\u7b97\uff08\u4fee\u6b63\u7248\uff1a\u7b2c\u4e8c\u5929\u8d77\u6bcf\u5929\u90fd\u662f\u57fa\u672c\u50f9-1000\uff09\n            $daily_rates = array();\n            for ($day = 1; $day <= $trip_days; $day++) {\n                if ($day == 1) {\n                    $daily_rates[$day] = $base_daily_rate;\n                } else {\n                    \/\/ \u7b2c\u4e8c\u5929\u8d77\uff0c\u6bcf\u5929\u90fd\u662f\u57fa\u672c\u50f9\u683c\u6e1b1000\n                    $daily_rates[$day] = $base_daily_rate - 1000;\n                }\n            }\n            \n            $base_total = array_sum($daily_rates);\n            $breakdown['base_price'] = $base_total;\n            $breakdown['daily_rates'] = $daily_rates;\n            $breakdown['base_daily_rate'] = $base_daily_rate;\n            $breakdown['is_south'] = $is_south;\n            $breakdown['detected_areas'] = array_unique($detected_areas);\n            $subtotal += $base_total;\n            \n            \/\/ ====================================\n            \/\/ 2. \u5c71\u5340\u52a0\u50f9\u5224\u5b9a\uff08\u4f7f\u7528 legacy \u908f\u8f2f\uff09\n            \/\/ ====================================\n            $mountain_surcharge = 0;\n            $mountain_days = array();\n            $needs_manual_check = false;\n            \n            foreach ($daily_routes as $index => $route) {\n                $day_num = $index + 1;\n                \n                \/\/ \u8df3\u904e\u6c92\u6709\u5730\u5740\u7684\u65e5\u671f\n                if (empty($route['origin']) && empty($route['destination']) && empty($route['stops'])) {\n                    continue;\n                }\n                \n                \/\/ \u6aa2\u67e5\u8d77\u9ede\n                $origin_check = $this->check_mountain_route($route['origin']);\n                \/\/ \u6aa2\u67e5\u7d42\u9ede\n                $dest_check = $this->check_mountain_route($route['destination']);\n                \n                \/\/ \u6aa2\u67e5\u505c\u9760\u9ede\n                $stops_mountain = false;\n                $stops_elevation = 0;\n                $mountain_stops = array();\n                \n                if (!empty($route['stops']) && is_array($route['stops'])) {\n                    foreach ($route['stops'] as $stop) {\n                        if (!empty($stop)) {\n                            $stop_check = $this->check_mountain_route($stop);\n                            \n                            if ($stop_check['is_mountain'] || $stop_check['elevation'] > 500) {\n                                $stops_mountain = true;\n                                $stops_elevation = max($stops_elevation, $stop_check['elevation']);\n                                $mountain_stops[] = $stop;\n                            }\n                            \n                            \/\/ \u6aa2\u67e5\u6392\u9664\u5730\u5340\n                            if ($stop_check['is_excluded']) {\n                                wp_send_json_error(array(\n                                    'message' => $stop_check['excluded_reason']\n                                ));\n                                wp_die();\n                            }\n                        }\n                    }\n                }\n                \n                \/\/ \u5224\u65b7\u8a72\u65e5\u662f\u5426\u70ba\u5c71\u5340\u884c\u7a0b\n                $is_mountain_day = false;\n                $day_confidence = 0;\n                $day_elevation = max($origin_check['elevation'], $dest_check['elevation'], $stops_elevation);\n                \n                \/\/ \u6aa2\u67e5\u6392\u9664\u5730\u5340\n                if ($origin_check['is_excluded'] || $dest_check['is_excluded']) {\n                    wp_send_json_error(array(\n                        'message' => $origin_check['excluded_reason'] ?: $dest_check['excluded_reason']\n                    ));\n                    wp_die();\n                }\n                \n                \/\/ \u53ea\u8981\u8d77\u9ede\u3001\u7d42\u9ede\u6216\u4efb\u4f55\u505c\u9760\u9ede\u5728\u5c71\u5340\uff0c\u8a72\u65e5\u5c31\u7b97\u5c71\u5340\u884c\u7a0b\n                if ($origin_check['confirmed'] || $dest_check['confirmed'] || ($stops_mountain && $stops_elevation > 500)) {\n                    $is_mountain_day = true;\n                    $day_confidence = max(\n                        $origin_check['confidence'], \n                        $dest_check['confidence'], \n                        ($stops_mountain && $stops_elevation > 500 ? 90 : 0)\n                    );\n                } elseif (($origin_check['is_mountain'] || $dest_check['is_mountain'] || $stops_mountain) && $day_elevation > 0) {\n                    if ($day_elevation > 800) {\n                        $is_mountain_day = true;\n                        $day_confidence = 95;\n                    } elseif ($day_elevation > 500) {\n                        $is_mountain_day = true;\n                        $day_confidence = 85;\n                    } else {\n                        $is_mountain_day = false;\n                        $needs_manual_check = true;\n                    }\n                }\n                \n                if ($is_mountain_day) {\n                    $mountain_surcharge += 1000;\n                    \n                    $mountain_areas = array();\n                    if (!empty($origin_check['detected_areas'])) {\n                        $mountain_areas = array_merge($mountain_areas, $origin_check['detected_areas']);\n                    }\n                    if (!empty($dest_check['detected_areas'])) {\n                        $mountain_areas = array_merge($mountain_areas, $dest_check['detected_areas']);\n                    }\n                    if (!empty($mountain_stops)) {\n                        $mountain_areas = array_merge($mountain_areas, $mountain_stops);\n                    }\n                    \n                    $mountain_days[] = array(\n                        'day' => $day_num,\n                        'confidence' => $day_confidence,\n                        'elevation' => round($day_elevation),\n                        'area' => array_unique(array_filter($mountain_areas))\n                    );\n                }\n            }\n            \n            \/\/ \u53ea\u5728\u771f\u7684\u6709\u5c71\u5340\u6642\u624d\u52a0\u5165 breakdown\n            if (!empty($mountain_days) && $mountain_surcharge > 0) {\n                $breakdown['mountain_surcharge'] = $mountain_surcharge;\n                $breakdown['mountain_days'] = $mountain_days;\n                $subtotal += $mountain_surcharge;\n            } else {\n                $breakdown['mountain_surcharge'] = 0;\n                $breakdown['mountain_days'] = array();\n            }\n            $breakdown['mountain_needs_check'] = $needs_manual_check;\n            \n            \/\/ ====================================\n            \/\/ 3. \u53f8\u6a5f\u88dc\u8cbc\n            \/\/ ====================================\n            $driver_allowance = 0;\n            \n            \/\/ \u4f4f\u5bbf\u88dc\u8cbc\uff08\u5929\u6578-1\u665a\uff09\n            if ($driver_accommodation === 'book' && $trip_days > 1) {\n                $nights = $trip_days - 1;\n                $accommodation_fee = $nights * 2000;\n                $breakdown['driver_accommodation'] = $accommodation_fee;\n                $driver_allowance += $accommodation_fee;\n            }\n            \n            \/\/ \u9910\u8cbb\u88dc\u8cbc\n            if ($driver_meals === 'allowance') {\n                $meals_fee = $trip_days * 400;\n                $breakdown['driver_meals'] = $meals_fee;\n                $driver_allowance += $meals_fee;\n            }\n            \n            $breakdown['driver_allowance'] = $driver_allowance;\n            $subtotal += $driver_allowance;\n            \n            \/\/ ====================================\n            \/\/ 4. \u52a0\u8cfc\u9805\u76ee\n            \/\/ ====================================\n            $addon_charge = ($child_seats * 100) + ($booster_seats * 100);\n            $breakdown['addon_charge'] = $addon_charge;\n            $subtotal += $addon_charge;\n            \n            \/\/ ====================================\n            \/\/ 5. \u7e3d\u8a08\uff08\u5df2\u542b5%\uff09\n            \/\/ ====================================\n            $total = $subtotal;\n            \n            \/\/ \u8a02\u91d1\u8207\u5c3e\u6b3e\n            $deposit = round($total * 0.3);\n            $balance = $total - $deposit;\n            \n            \/\/ \u8fd4\u56de\u7d50\u679c\uff08\u8207 legacy \u683c\u5f0f\u76f8\u5bb9\uff09\n            wp_send_json_success(array(\n                'subtotal' => $subtotal,\n                'total' => $total,\n                'deposit' => $deposit,\n                'balance' => $balance,\n                'breakdown' => $breakdown,\n                'trip_days' => $trip_days,\n                'daily_routes' => $daily_routes\n            ));\n            \n        } catch (Exception $e) {\n            error_log('Charter Price Calc Error: ' . $e->getMessage());\n            wp_send_json_error(array('message' => '\u8a08\u7b97\u932f\u8aa4\uff1a' . $e->getMessage()));\n        }\n        \n        wp_die();\n    }\n    \n    \/**\n     * \u8655\u7406\u5730\u5740\u81ea\u52d5\u5b8c\u6210\uff08\u8207 legacy \u76f8\u5bb9\uff09\n     *\/\n    public function handle_address_autocomplete() {\n        $input = isset($_POST['input']) ? sanitize_text_field($_POST['input']) : '';\n        \n        if (mb_strlen($input) < 2) {\n            wp_send_json_error('\u8f38\u5165\u592a\u77ed');\n        }\n        \n        $api_key = GOOGLE_MAPS_API_KEY;\n        \n        \/\/ \u4f7f\u7528 Places Autocomplete API\n        $url = 'https:\/\/maps.googleapis.com\/maps\/api\/place\/autocomplete\/json';\n        $params = array(\n            'input' => $input,\n            'language' => 'zh-TW',\n            'components' => 'country:TW',\n            'key' => $api_key\n        );\n        \n        $response = wp_remote_get($url . '?' . http_build_query($params));\n        \n        if (is_wp_error($response)) {\n            wp_send_json_error('API \u932f\u8aa4');\n        }\n        \n        $body = wp_remote_retrieve_body($response);\n        $data = json_decode($body, true);\n        \n        if ($data['status'] === 'OK') {\n            $suggestions = array();\n            foreach ($data['predictions'] as $prediction) {\n                $suggestions[] = array(\n                    'description' => $prediction['description'],\n                    'place_id' => $prediction['place_id'],\n                    'main_text' => $prediction['structured_formatting']['main_text'] ?? '',\n                    'secondary_text' => $prediction['structured_formatting']['secondary_text'] ?? ''\n                );\n            }\n            wp_send_json_success($suggestions);\n        }\n        \n        wp_send_json_error('\u7121\u5efa\u8b70');\n        wp_die();\n    }\n    \n    \/**\n     * \u8655\u7406\u5730\u5740\u9a57\u8b49\uff08\u8207 legacy \u76f8\u5bb9\uff09\n     *\/\n    public function handle_address_validation() {\n        $address = isset($_POST['address']) ? sanitize_text_field($_POST['address']) : '';\n        \n        if (empty($address)) {\n            wp_send_json_error('\u5730\u5740\u70ba\u7a7a');\n        }\n        \n        \/\/ \u4f7f\u7528\u667a\u80fd\u5730\u5740\u8655\u7406\n        $processed = $this->smart_address_processing($address);\n        \n        if ($processed['method'] === 'fallback') {\n            wp_send_json_error(array(\n                'message' => '\u7121\u6cd5\u8b58\u5225\u5730\u5740',\n                'original' => $address\n            ));\n        }\n        \n        \/\/ \u6aa2\u67e5\u5c71\u5340\n        $mountain_check = $this->check_mountain_route($address);\n        \n        wp_send_json_success(array(\n            'formatted' => $processed['formatted'],\n            'city' => $processed['city'],\n            'district' => $processed['district'],\n            'elevation' => round($processed['elevation']),\n            'is_mountain' => $mountain_check['is_mountain'],\n            'mountain_confidence' => $mountain_check['confidence'],\n            'base_rate' => $this->get_city_base_rate($address)\n        ));\n        \n        wp_die();\n    }\n    \n    \/**\n     * \u8655\u7406\u9810\u7d04\u63d0\u4ea4\uff08\u8207 legacy \u76f8\u5bb9\uff09\n     *\/\n    public function handle_booking_submission() {\n        try {\n            \/\/ \u57fa\u672c\u8cc7\u6599\u9a57\u8b49\n            $trip_days = isset($_POST['trip_days']) ? intval($_POST['trip_days']) : 0;\n            $start_date = isset($_POST['start_date']) ? sanitize_text_field($_POST['start_date']) : '';\n            $start_time = isset($_POST['start_time']) ? sanitize_text_field($_POST['start_time']) : '';\n            $passengers = isset($_POST['passengers']) ? intval($_POST['passengers']) : 1;\n            \n            \/\/ \u5ba2\u6236\u8cc7\u6599\n            $customer_name = isset($_POST['customer_name']) ? sanitize_text_field($_POST['customer_name']) : '';\n            $customer_phone = isset($_POST['customer_phone']) ? sanitize_text_field($_POST['customer_phone']) : '';\n            $customer_email = isset($_POST['customer_email']) ? sanitize_email($_POST['customer_email']) : '';\n            $notes = isset($_POST['notes']) ? sanitize_textarea_field($_POST['notes']) : '';\n            \n            \/\/ \u6bcf\u65e5\u884c\u7a0b\n            $daily_routes = array();\n            if (!empty($_POST['daily_routes'])) {\n                $decoded = json_decode(stripslashes($_POST['daily_routes']), true);\n                if (is_array($decoded)) {\n                    $daily_routes = $decoded;\n                }\n            }\n            \n            \/\/ \u50f9\u683c\u8cc7\u8a0a\n            $total_price = isset($_POST['total_price']) ? floatval($_POST['total_price']) : 0;\n            $deposit = isset($_POST['deposit']) ? floatval($_POST['deposit']) : 0;\n            \n            \/\/ \u5c71\u5340\u6aa2\u6e2c\u7d50\u679c\n            $mountain_detection = isset($_POST['mountain_detection']) ? \n                json_decode(stripslashes($_POST['mountain_detection']), true) : null;\n            \n            \/\/ \u4f7f\u7528 24-Charter-Validator \u9a57\u8b49\u8cc7\u6599\n            $validation_data = array(\n                'trip_days' => $trip_days,\n                'start_date' => $start_date,\n                'start_time' => $start_time,\n                'passengers' => $passengers,\n                'customer_name' => $customer_name,\n                'customer_phone' => $customer_phone,\n                'customer_email' => $customer_email,\n                'notes' => $notes,\n                'daily_routes' => $daily_routes,\n                'total_price' => $total_price,\n                'deposit' => $deposit,\n                'child_seats' => isset($_POST['child_seats']) ? intval($_POST['child_seats']) : 0,\n                'booster_seats' => isset($_POST['booster_seats']) ? intval($_POST['booster_seats']) : 0,\n                'driver_accommodation' => isset($_POST['driver_accommodation']) ? \n                    $_POST['driver_accommodation'] : 'self',\n                'driver_meals' => isset($_POST['driver_meals']) ? \n                    $_POST['driver_meals'] : 'provided'\n            );\n            \n            $validation_result = $this->validator->validate_booking($validation_data);\n            \n            if (!$validation_result['valid']) {\n                wp_send_json_error(array(\n                    'message' => implode('\u3001', $validation_result['errors'])\n                ));\n                wp_die();\n            }\n            \n            \/\/ \u683c\u5f0f\u5316\u96fb\u8a71\u865f\u78bc\uff08\u7d71\u4e00\u683c\u5f0f\u5132\u5b58\uff09\n            $customer_phone = preg_replace('\/[^0-9+]\/', '', $customer_phone);\n            if (strpos($customer_phone, '+') !== 0 && strlen($customer_phone) == 10) {\n                $customer_phone = '+886' . ltrim($customer_phone, '0');\n            }\n            \n            \/\/ \u7d44\u88dd\u8a02\u55ae\u8cc7\u6599\n            $booking_data = array(\n                'booking_type' => 'charter',\n                'trip_days' => $trip_days,\n                'start_date' => $start_date,\n                'start_time' => $start_time,\n                'end_date' => date('Y-m-d', strtotime($start_date . ' +' . ($trip_days - 1) . ' days')),\n                'passengers' => $passengers,\n                'daily_routes' => $daily_routes,\n                'customer_name' => $customer_name,\n                'customer_phone' => $customer_phone,\n                'customer_email' => $customer_email,\n                'notes' => $notes,\n                'total_price' => $total_price,\n                'deposit' => $deposit,\n                'balance' => $total_price - $deposit,\n                'mountain_detection' => $mountain_detection,\n                'driver_accommodation' => $validation_data['driver_accommodation'],\n                'driver_meals' => $validation_data['driver_meals'],\n                'child_seats' => $validation_data['child_seats'],\n                'booster_seats' => $validation_data['booster_seats'],\n                'booking_time' => current_time('mysql'),\n                'booking_status' => 'pending',\n                'ip_address' => $_SERVER['REMOTE_ADDR']\n            );\n            \n            \/\/ \u4f7f\u7528 22-Charter-Database \u5132\u5b58\u8cc7\u6599\n            if (method_exists($this->database, 'create_booking')) {\n                $result = $this->database->create_booking($booking_data);\n                \n                if ($result['success']) {\n                    $booking_id = $result['booking_id'];\n                    $booking_number = $result['booking_number'];\n                } else {\n                    throw new Exception($result['error']);\n                }\n            } else {\n                \/\/ \u5099\u7528\uff1a\u4f7f\u7528 21-Charter-PostType \u5132\u5b58\n                $post_data = array(\n                    'post_title' => sprintf('[\u5305\u8eca] %s - %s (%d\u5929)',\n                        $customer_name,\n                        $start_date,\n                        $trip_days\n                    ),\n                    'post_content' => wp_json_encode($booking_data, JSON_UNESCAPED_UNICODE),\n                    'post_status' => 'private',\n                    'post_type' => 'charter_booking',\n                    'meta_input' => array(\n                        '_booking_data' => $booking_data,\n                        '_customer_name' => $customer_name,\n                        '_customer_phone' => $customer_phone,\n                        '_customer_email' => $customer_email,\n                        '_start_date' => $start_date,\n                        '_trip_days' => $trip_days,\n                        '_total_price' => $total_price,\n                        '_mountain_needs_check' => !empty($mountain_detection['needs_manual_check'])\n                    )\n                );\n                \n                $booking_id = wp_insert_post($post_data);\n                \n                if (is_wp_error($booking_id)) {\n                    throw new Exception('\u9810\u7d04\u5132\u5b58\u5931\u6557');\n                }\n                \n                $booking_number = 'CHT' . str_pad($booking_id, 6, '0', STR_PAD_LEFT);\n            }\n            \n            \/\/ \u767c\u9001\u78ba\u8a8d\u4fe1 - \u53ea\u5728\u6709 Email \u6642\u767c\u9001\n            if (!empty($customer_email)) {\n                $this->send_confirmation_email($booking_id, $booking_data);\n            } else {\n                \/\/ \u8a18\u9304\u5ba2\u6236\u672a\u63d0\u4f9b Email\n                update_post_meta($booking_id, '_no_email_notification', true);\n            }\n            \n            \/\/ \u767c\u9001\u7ba1\u7406\u54e1\u901a\u77e5\uff08\u4e00\u5b9a\u8981\u767c\u9001\uff09\n            $this->send_admin_notification($booking_id, $booking_data);\n            \n            \/\/ \u8fd4\u56de\u6210\u529f\u8a0a\u606f\uff08\u8207 legacy \u683c\u5f0f\u76f8\u5bb9\uff09\n            wp_send_json_success(array(\n                'message' => '\u9810\u7d04\u6210\u529f\uff01\u8acb\u7acb\u5373\u652f\u4ed8\u8a02\u91d1\uff0c\u6211\u5011\u5c07\u572824\u5c0f\u6642\u5167\u8207\u60a8\u806f\u7e6b\u78ba\u8a8d\u3002',\n                'booking_id' => $booking_id,\n                'booking_number' => $booking_number,\n                'needs_confirmation' => !empty($mountain_detection['needs_manual_check'])\n            ));\n            \n        } catch (Exception $e) {\n            error_log('Charter Booking Error: ' . $e->getMessage());\n            wp_send_json_error(array('message' => '\u9810\u7d04\u5931\u6557\uff1a' . $e->getMessage()));\n        }\n        \n        wp_die();\n    }\n    \n    \/**\n     * \u8655\u7406\u53ef\u7528\u6027\u6aa2\u67e5\n     *\/\n    public function handle_availability_check() {\n        $date = isset($_POST['date']) ? sanitize_text_field($_POST['date']) : '';\n        $trip_days = isset($_POST['trip_days']) ? intval($_POST['trip_days']) : 1;\n        \n        if (empty($date)) {\n            wp_send_json_error('\u8acb\u9078\u64c7\u65e5\u671f');\n        }\n        \n        \/\/ \u4f7f\u7528 22-Charter-Database \u6aa2\u67e5\u885d\u7a81\n        $conflicts = $this->database->check_conflicts($date, $trip_days);\n        \n        if ($conflicts) {\n            wp_send_json_error(array(\n                'message' => '\u9078\u64c7\u7684\u65e5\u671f\u5df2\u6709\u5176\u4ed6\u9810\u7d04',\n                'conflicts' => $conflicts\n            ));\n        }\n        \n        wp_send_json_success(array(\n            'available' => true,\n            'message' => '\u65e5\u671f\u53ef\u9810\u7d04'\n        ));\n        \n        wp_die();\n    }\n    \n    \/**\n     * \u8655\u7406\u9810\u7d04\u72c0\u614b\u67e5\u8a62\n     *\/\n    public function handle_get_booking_status() {\n        $booking_number = isset($_POST['booking_number']) ? \n            sanitize_text_field($_POST['booking_number']) : '';\n        \n        if (empty($booking_number)) {\n            wp_send_json_error('\u8acb\u63d0\u4f9b\u9810\u7d04\u7de8\u865f');\n        }\n        \n        \/\/ \u4f7f\u7528 22-Charter-Database \u67e5\u8a62\n        $booking = $this->database->get_booking_by_number($booking_number);\n        \n        if (!$booking) {\n            wp_send_json_error('\u627e\u4e0d\u5230\u6b64\u9810\u7d04\u7de8\u865f');\n        }\n        \n        wp_send_json_success(array(\n            'status' => $booking['status'],\n            'payment_status' => $booking['payment_status'],\n            'booking_data' => $booking\n        ));\n        \n        wp_die();\n    }\n    \n    \/**\n     * \u8655\u7406\u72c0\u614b\u66f4\u65b0\uff08\u7ba1\u7406\u54e1\u5c08\u7528\uff09\n     *\/\n    public function handle_status_update() {\n        \/\/ \u6aa2\u67e5\u6b0a\u9650\n        if (!current_user_can('manage_options')) {\n            wp_send_json_error('\u6b0a\u9650\u4e0d\u8db3');\n        }\n        \n        $booking_id = isset($_POST['booking_id']) ? intval($_POST['booking_id']) : 0;\n        $status = isset($_POST['status']) ? sanitize_text_field($_POST['status']) : '';\n        $payment_status = isset($_POST['payment_status']) ? \n            sanitize_text_field($_POST['payment_status']) : '';\n        \n        if (!$booking_id) {\n            wp_send_json_error('\u7f3a\u5c11\u9810\u7d04 ID');\n        }\n        \n        $update_data = array();\n        if (!empty($status)) {\n            $update_data['status'] = $status;\n        }\n        if (!empty($payment_status)) {\n            $update_data['payment_status'] = $payment_status;\n        }\n        \n        \/\/ \u4f7f\u7528 22-Charter-Database \u66f4\u65b0\n        $result = $this->database->update_booking($booking_id, $update_data);\n        \n        if ($result['success']) {\n            wp_send_json_success('\u72c0\u614b\u5df2\u66f4\u65b0');\n        } else {\n            wp_send_json_error($result['error']);\n        }\n        \n        wp_die();\n    }\n    \n    \/**\n     * \u8655\u7406\u9810\u7d04\u532f\u51fa\uff08\u7ba1\u7406\u54e1\u5c08\u7528\uff09\n     *\/\n    public function handle_export_bookings() {\n        \/\/ \u6aa2\u67e5\u6b0a\u9650\n        if (!current_user_can('manage_options')) {\n            wp_send_json_error('\u6b0a\u9650\u4e0d\u8db3');\n        }\n        \n        $date_from = isset($_POST['date_from']) ? sanitize_text_field($_POST['date_from']) : '';\n        $date_to = isset($_POST['date_to']) ? sanitize_text_field($_POST['date_to']) : '';\n        \n        \/\/ \u4f7f\u7528 22-Charter-Database \u67e5\u8a62\n        $result = $this->database->get_bookings(array(\n            'date_from' => $date_from,\n            'date_to' => $date_to,\n            'limit' => 9999\n        ));\n        \n        wp_send_json_success($result);\n        wp_die();\n    }\n    \n    \/\/ ====================================\n    \/\/ \u8f14\u52a9\u51fd\u6578\uff08\u8207 legacy \u76f8\u5bb9\uff09\n    \/\/ ====================================\n    \n    \/**\n     * \u53d6\u5f97\u57ce\u5e02\u57fa\u672c\u8cbb\u7387\n     *\/\n    private function get_city_base_rate($address) {\n        if (empty($address)) {\n            return 12000;\n        }\n        \n        \/\/ \u4f7f\u7528\u667a\u80fd\u5730\u5740\u8655\u7406\n        $processed = $this->smart_address_processing($address);\n        \n        \/\/ 14,000\u5143\u5340\u57df\uff1a\u5609\u7fa9\u4ee5\u5357(\u4e0d\u542b) + \u82b1\u6771\n        $south_14k_cities = NineOVan_Charter_Settings::get_south_14k_cities();\n        \n        \/\/ \u6aa2\u67e5\u8655\u7406\u5f8c\u7684\u57ce\u5e02\n        if (!empty($processed['city'])) {\n            foreach ($south_14k_cities as $city) {\n                if (mb_strpos($processed['city'], $city) !== false) {\n                    return 14000;\n                }\n            }\n        }\n        \n        \/\/ \u5099\u7528\uff1a\u6aa2\u67e5\u683c\u5f0f\u5316\u5730\u5740\n        foreach ($south_14k_cities as $city) {\n            if (mb_strpos($processed['formatted'], $city) !== false) {\n                return 14000;\n            }\n        }\n        \n        \/\/ \u9810\u8a2d\u70ba\u5317\u90e8\u50f9\u683c\n        return 12000;\n    }\n    \n    \/**\n     * \u6aa2\u6e2c\u57ce\u5e02\n     *\/\n    private function detect_city($address) {\n        if (empty($address)) {\n            return '';\n        }\n        \n        $processed = $this->smart_address_processing($address);\n        return $processed['city'] ?? '';\n    }\n    \n    \/**\n     * \u6aa2\u67e5\u5c71\u5340\u8def\u7dda\n     *\/\n    private function check_mountain_route($address, $day_routes = array()) {\n        \/\/ \u7a7a\u5730\u5740\u76f4\u63a5\u8fd4\u56de\u975e\u5c71\u5340\n        if (empty($address)) {\n            return array(\n                'is_mountain' => false,\n                'confirmed' => false,\n                'confidence' => 0,\n                'detected_areas' => array(),\n                'method' => 'empty',\n                'requires_manual_check' => false,\n                'is_excluded' => false,\n                'excluded_reason' => '',\n                'elevation' => 0,\n                'formatted_address' => ''\n            );\n        }\n        \n        \/\/ \u6392\u9664\u5730\u5340\u6aa2\u67e5\n        $excluded_areas = NineOVan_Charter_Settings::get_excluded_areas();\n        foreach ($excluded_areas as $excluded) {\n            if (mb_strpos($address, $excluded) !== false) {\n                return array(\n                    'is_mountain' => false,\n                    'confirmed' => false,\n                    'confidence' => 0,\n                    'detected_areas' => array(),\n                    'method' => 'excluded',\n                    'requires_manual_check' => false,\n                    'is_excluded' => true,\n                    'excluded_reason' => \"\u4e0d\u63d0\u4f9b{$excluded}\u5730\u5340\u670d\u52d9\",\n                    'elevation' => 0,\n                    'formatted_address' => $address\n                );\n            }\n        }\n        \n        \/\/ \u4f7f\u7528\u667a\u80fd\u5730\u5740\u8655\u7406\n        $processed = $this->smart_address_processing($address);\n        \n        $result = array(\n            'is_mountain' => false,\n            'confirmed' => false,\n            'confidence' => $processed['confidence'],\n            'detected_areas' => array(),\n            'method' => $processed['method'],\n            'requires_manual_check' => false,\n            'is_excluded' => false,\n            'excluded_reason' => '',\n            'formatted_address' => $processed['formatted'],\n            'elevation' => $processed['elevation']\n        );\n        \n        \/\/ \u6839\u64da\u8655\u7406\u7d50\u679c\u5224\u65b7\n        if ($processed['is_mountain']) {\n            $result['is_mountain'] = true;\n            \n            \/\/ \u6d77\u62d4\u8d85\u904e800\u516c\u5c3a\uff0c\u9ad8\u4fe1\u5fc3\u5ea6\n            if ($processed['elevation'] > 800) {\n                $result['confirmed'] = true;\n                $result['confidence'] = 99;\n                $result['detected_areas'][] = \"\u6d77\u62d4 \" . round($processed['elevation']) . \" \u516c\u5c3a\";\n            }\n            \/\/ \u6d77\u62d4500-800\u516c\u5c3a\uff0c\u4e2d\u4fe1\u5fc3\u5ea6\n            elseif ($processed['elevation'] > 500) {\n                $result['confirmed'] = true;\n                $result['confidence'] = 90;\n                $result['detected_areas'][] = \"\u6d77\u62d4 \" . round($processed['elevation']) . \" \u516c\u5c3a\";\n            }\n            \/\/ \u95dc\u9375\u5b57\u5224\u65b7\n            else {\n                $result['confirmed'] = false;\n                $result['requires_manual_check'] = true;\n                $result['confidence'] = 60;\n            }\n        }\n        \n        \/\/ \u5099\u7528\uff1a\u50b3\u7d71\u95dc\u9375\u5b57\u6aa2\u67e5\uff08\u7576 API \u5931\u6557\u6642\uff09\n        if ($processed['method'] === 'fallback') {\n            $mountain_areas = NineOVan_Charter_Settings::get_mountain_areas();\n            \n            foreach ($mountain_areas as $keyword => $confidence) {\n                if (mb_strpos($address, $keyword) !== false) {\n                    $result['is_mountain'] = true;\n                    $result['confirmed'] = true;\n                    $result['confidence'] = $confidence;\n                    $result['method'] = 'keyword_fallback';\n                    $result['detected_areas'][] = $keyword;\n                    break;\n                }\n            }\n        }\n        \n        return $result;\n    }\n    \n    \/**\n     * \u667a\u80fd\u5730\u5740\u8655\u7406\u7cfb\u7d71\n     *\/\n    private function smart_address_processing($address) {\n        \/\/ \u7a7a\u5730\u5740\u76f4\u63a5\u8fd4\u56de\n        if (empty($address)) {\n            return array(\n                'original' => '',\n                'formatted' => '',\n                'city' => '',\n                'district' => '',\n                'is_mountain' => false,\n                'elevation' => 0,\n                'confidence' => 0,\n                'method' => 'empty'\n            );\n        }\n        \n        \/\/ \u5148\u5617\u8a66\u4f5c\u70ba\u5730\u6a19\u641c\u5c0b\n        $place_result = $this->search_place($address);\n        \n        if ($place_result) {\n            \/\/ \u4f7f\u7528\u627e\u5230\u7684\u5730\u6a19\u5730\u5740\u9032\u884c\u5730\u7406\u7de8\u78bc\n            $geocode_result = $this->geocode_address($place_result['formatted_address']);\n        } else {\n            \/\/ \u76f4\u63a5\u5730\u7406\u7de8\u78bc\n            $geocode_result = $this->geocode_address($address);\n        }\n        \n        if (!$geocode_result) {\n            \/\/ \u5982\u679c API \u5931\u6557\uff0c\u8fd4\u56de\u539f\u59cb\u5730\u5740\n            return array(\n                'original' => $address,\n                'formatted' => $address,\n                'city' => '',\n                'district' => '',\n                'is_mountain' => false,\n                'elevation' => 0,\n                'confidence' => 0,\n                'method' => 'fallback'\n            );\n        }\n        \n        \/\/ \u6aa2\u67e5\u6d77\u62d4\u9ad8\u5ea6\n        $elevation = 0;\n        if (isset($geocode_result['lat']) && isset($geocode_result['lng'])) {\n            $elevation = $this->check_elevation($geocode_result['lat'], $geocode_result['lng']);\n        }\n        \n        \/\/ \u5224\u65b7\u662f\u5426\u70ba\u5c71\u5340\uff08\u6d77\u62d4\u8d85\u904e500\u516c\u5c3a\uff09\n        $is_mountain = ($elevation > 500);\n        \n        \/\/ \u984d\u5916\u7684\u5c71\u5340\u95dc\u9375\u5b57\u6aa2\u67e5\n        $mountain_keywords = NineOVan_Charter_Settings::get_mountain_keywords();\n        foreach ($mountain_keywords as $keyword) {\n            if (mb_strpos($geocode_result['formatted_address'], $keyword) !== false) {\n                $is_mountain = true;\n                break;\n            }\n        }\n        \n        return array(\n            'original' => $address,\n            'formatted' => $geocode_result['formatted_address'],\n            'city' => $geocode_result['city'],\n            'district' => $geocode_result['district'],\n            'lat' => $geocode_result['lat'],\n            'lng' => $geocode_result['lng'],\n            'is_mountain' => $is_mountain,\n            'elevation' => $elevation,\n            'confidence' => 95, \/\/ API \u7d50\u679c\u4fe1\u5fc3\u5ea6\u9ad8\n            'method' => 'google_api',\n            'components' => $geocode_result['components']\n        );\n    }\n    \n    \/**\n     * \u4f7f\u7528 Google Maps API \u8655\u7406\u5730\u6a19\n     *\/\n    private function geocode_address($address) {\n        if (empty($address)) {\n            return false;\n        }\n        \n        $api_key = GOOGLE_MAPS_API_KEY;\n        \n        \/\/ \u6aa2\u67e5\u5feb\u53d6\n        $cache_key = 'geocode_' . md5($address);\n        $cached = get_transient($cache_key);\n        if ($cached !== false) {\n            return $cached;\n        }\n        \n        \/\/ \u4f7f\u7528 Geocoding API \u7372\u53d6\u5730\u5740\u8a73\u7d30\u8cc7\u8a0a\n        $url = 'https:\/\/maps.googleapis.com\/maps\/api\/geocode\/json';\n        $params = array(\n            'address' => $address,\n            'language' => 'zh-TW',\n            'region' => 'TW',\n            'key' => $api_key\n        );\n        \n        $response = wp_remote_get($url . '?' . http_build_query($params));\n        \n        if (is_wp_error($response)) {\n            error_log('Geocoding API Error: ' . $response->get_error_message());\n            return false;\n        }\n        \n        $body = wp_remote_retrieve_body($response);\n        $data = json_decode($body, true);\n        \n        if ($data['status'] !== 'OK' || empty($data['results'])) {\n            return false;\n        }\n        \n        $result = $data['results'][0];\n        \n        \/\/ \u89e3\u6790\u5730\u5740\u7d44\u4ef6\n        $parsed_data = array(\n            'formatted_address' => $result['formatted_address'],\n            'lat' => $result['geometry']['location']['lat'],\n            'lng' => $result['geometry']['location']['lng'],\n            'city' => '',\n            'district' => '',\n            'county' => '',\n            'country' => '',\n            'place_types' => $result['types'],\n            'components' => array()\n        );\n        \n        \/\/ \u5206\u6790\u5730\u5740\u7d44\u4ef6\n        foreach ($result['address_components'] as $component) {\n            $types = $component['types'];\n            \n            if (in_array('country', $types)) {\n                $parsed_data['country'] = $component['long_name'];\n            }\n            if (in_array('administrative_area_level_1', $types)) {\n                \/\/ \u7e23\u5e02\u7d1a\u5225\n                $parsed_data['city'] = $component['long_name'];\n            }\n            if (in_array('administrative_area_level_2', $types)) {\n                \/\/ \u9109\u93ae\u5e02\u5340\u7d1a\u5225\n                $parsed_data['district'] = $component['long_name'];\n            }\n            if (in_array('administrative_area_level_3', $types)) {\n                \/\/ \u5340\u7d1a\u5225\n                $parsed_data['county'] = $component['long_name'];\n            }\n            \n            \/\/ \u4fdd\u5b58\u6240\u6709\u7d44\u4ef6\u4f9b\u5f8c\u7e8c\u5206\u6790\n            $parsed_data['components'][$types[0]] = $component['long_name'];\n        }\n        \n        \/\/ \u5feb\u53d624\u5c0f\u6642\n        set_transient($cache_key, $parsed_data, 86400);\n        \n        return $parsed_data;\n    }\n    \n    \/**\n     * \u4f7f\u7528 Places API \u641c\u5c0b\u5730\u6a19\n     *\/\n    private function search_place($query) {\n        if (empty($query)) {\n            return false;\n        }\n        \n        $api_key = GOOGLE_MAPS_API_KEY;\n        \n        \/\/ \u6aa2\u67e5\u5feb\u53d6\n        $cache_key = 'place_' . md5($query);\n        $cached = get_transient($cache_key);\n        if ($cached !== false) {\n            return $cached;\n        }\n        \n        \/\/ \u4f7f\u7528 Places Text Search API\n        $url = 'https:\/\/maps.googleapis.com\/maps\/api\/place\/textsearch\/json';\n        $params = array(\n            'query' => $query . ' \u53f0\u7063',\n            'language' => 'zh-TW',\n            'region' => 'TW',\n            'key' => $api_key\n        );\n        \n        $response = wp_remote_get($url . '?' . http_build_query($params));\n        \n        if (is_wp_error($response)) {\n            error_log('Places API Error: ' . $response->get_error_message());\n            return false;\n        }\n        \n        $body = wp_remote_retrieve_body($response);\n        $data = json_decode($body, true);\n        \n        if ($data['status'] !== 'OK' || empty($data['results'])) {\n            return false;\n        }\n        \n        $place = $data['results'][0];\n        \n        $result = array(\n            'name' => $place['name'],\n            'formatted_address' => $place['formatted_address'],\n            'lat' => $place['geometry']['location']['lat'],\n            'lng' => $place['geometry']['location']['lng'],\n            'place_id' => $place['place_id'],\n            'types' => $place['types']\n        );\n        \n        \/\/ \u5feb\u53d624\u5c0f\u6642\n        set_transient($cache_key, $result, 86400);\n        \n        return $result;\n    }\n    \n    \/**\n     * \u4f7f\u7528 Elevation API \u5224\u65b7\u5c71\u5340\n     *\/\n    private function check_elevation($lat, $lng) {\n        $api_key = GOOGLE_MAPS_API_KEY;\n        \n        \/\/ \u6aa2\u67e5\u5feb\u53d6\n        $cache_key = 'elevation_' . md5($lat . ',' . $lng);\n        $cached = get_transient($cache_key);\n        if ($cached !== false) {\n            return $cached;\n        }\n        \n        \/\/ \u4f7f\u7528 Elevation API \u6aa2\u67e5\u6d77\u62d4\n        $url = 'https:\/\/maps.googleapis.com\/maps\/api\/elevation\/json';\n        $params = array(\n            'locations' => $lat . ',' . $lng,\n            'key' => $api_key\n        );\n        \n        $response = wp_remote_get($url . '?' . http_build_query($params));\n        \n        if (is_wp_error($response)) {\n            return 0;\n        }\n        \n        $body = wp_remote_retrieve_body($response);\n        $data = json_decode($body, true);\n        \n        $elevation = 0;\n        if ($data['status'] === 'OK' && !empty($data['results'])) {\n            $elevation = $data['results'][0]['elevation'];\n        }\n        \n        \/\/ \u5feb\u53d67\u5929\n        set_transient($cache_key, $elevation, 604800);\n        \n        return $elevation;\n    }\n    \n    \/**\n     * \u767c\u9001\u78ba\u8a8d\u4fe1\n     *\/\n    private function send_confirmation_email($booking_id, $booking_data) {\n        \/\/ \u6aa2\u67e5\u662f\u5426\u6709 Email\n        if (empty($booking_data['customer_email'])) {\n            return false;\n        }\n        \n        $to = $booking_data['customer_email'];\n        $subject = '\u5305\u8eca\u65c5\u904a\u9810\u7d04\u78ba\u8a8d - \u8a02\u55ae\u7de8\u865f CHT' . str_pad($booking_id, 6, '0', STR_PAD_LEFT);\n        \n        $message = \"\u89aa\u611b\u7684 {$booking_data['customer_name']} \u60a8\u597d\uff0c\\n\\n\";\n        $message .= \"\u60a8\u7684\u5305\u8eca\u65c5\u904a\u9810\u7d04\u5df2\u6210\u529f\u63d0\u4ea4\uff0c\u4ee5\u4e0b\u662f\u60a8\u7684\u9810\u7d04\u8a73\u60c5\uff1a\\n\\n\";\n        $message .= \"\u3010\u9810\u7d04\u7de8\u865f\u3011CHT\" . str_pad($booking_id, 6, '0', STR_PAD_LEFT) . \"\\n\";\n        $message .= \"\u3010\u884c\u7a0b\u5929\u6578\u3011{$booking_data['trip_days']}\u5929\\n\";\n        $message .= \"\u3010\u51fa\u767c\u65e5\u671f\u3011{$booking_data['start_date']} {$booking_data['start_time']}\\n\";\n        $message .= \"\u3010\u7d50\u675f\u65e5\u671f\u3011{$booking_data['end_date']}\\n\";\n        $message .= \"\u3010\u4e58\u5ba2\u4eba\u6578\u3011{$booking_data['passengers']}\u4eba\\n\";\n        \n        \/\/ \u52a0\u8cfc\u9805\u76ee\n        if (!empty($booking_data['child_seats']) && $booking_data['child_seats'] > 0) {\n            $message .= \"\u3010\u5b30\u5152\u5ea7\u6905\u3011{$booking_data['child_seats']}\u5f35\\n\";\n        }\n        if (!empty($booking_data['booster_seats']) && $booking_data['booster_seats'] > 0) {\n            $message .= \"\u3010\u589e\u9ad8\u588a\u3011{$booking_data['booster_seats']}\u5f35\\n\";\n        }\n        $message .= \"\\n\";\n        \n        \/\/ \u6bcf\u65e5\u884c\u7a0b\n        $message .= \"\u3010\u884c\u7a0b\u5b89\u6392\u3011\\n\";\n        foreach ($booking_data['daily_routes'] as $day => $route) {\n            $day_num = $day + 1;\n            $message .= \"Day {$day_num}:\\n\";\n            $message .= \"  \u8d77\u9ede\uff1a{$route['origin']}\\n\";\n            $message .= \"  \u7d42\u9ede\uff1a{$route['destination']}\\n\";\n            if (!empty($route['stops'])) {\n                $message .= \"  \u505c\u9760\u9ede\uff1a\" . implode('\u3001', $route['stops']) . \"\\n\";\n            }\n            $message .= \"\\n\";\n        }\n        \n        $message .= \"\u3010\u8cbb\u7528\u660e\u7d30\u3011\\n\";\n        $message .= \"\u7e3d\u91d1\u984d\uff1aNT$ \" . number_format($booking_data['total_price']) . \"\\n\";\n        $message .= \"\u8a02\u91d1(30%)\uff1aNT$ \" . number_format($booking_data['deposit']) . \"\\n\";\n        $message .= \"\u5c3e\u6b3e(70%)\uff1aNT$ \" . number_format($booking_data['balance']) . \"\\n\";\n        $message .= \"\u203b \u6240\u6709\u50f9\u683c\u5747\u5df2\u542b 5% \u71df\u696d\u7a05\\n\\n\";\n        \n        if (!empty($booking_data['notes'])) {\n            $message .= \"\u3010\u5099\u8a3b\u3011{$booking_data['notes']}\\n\\n\";\n        }\n        \n        if (!empty($booking_data['mountain_detection']['needs_manual_check'])) {\n            $message .= \"\u3010\u7279\u5225\u63d0\u9192\u3011\\n\";\n            $message .= \"\u60a8\u7684\u884c\u7a0b\u53ef\u80fd\u5305\u542b\u5c71\u5340\u8def\u7dda\uff0c\u6211\u5011\u5c07\u5728\u78ba\u8a8d\u5f8c\u544a\u77e5\u662f\u5426\u9700\u8981\u984d\u5916\u7684\u5c71\u5340\u670d\u52d9\u8cbb\u3002\\n\\n\";\n        }\n        \n        $message .= \"\u6211\u5011\u5c07\u572824\u5c0f\u6642\u5167\u8207\u60a8\u96fb\u8a71\u78ba\u8a8d\u9810\u7d04\u8a73\u60c5\u3002\\n\";\n        $message .= \"\u5982\u6709\u4efb\u4f55\u554f\u984c\uff0c\u8acb\u806f\u7e6b\u6211\u5011\u7684\u5ba2\u670d\u5c08\u7dda\u3002\\n\\n\";\n        $message .= \"\u611f\u8b1d\u60a8\u7684\u9810\u7d04\uff01\\n\";\n        $message .= \"9o Van Strip \u5305\u8eca\u65c5\u904a\u670d\u52d9\";\n        \n        $headers = array(\n            'Content-Type: text\/plain; charset=UTF-8',\n            'From: 9o Van Strip <noreply@' . $_SERVER['SERVER_NAME'] . '>'\n        );\n        \n        return wp_mail($to, $subject, $message, $headers);\n    }\n    \n    \/**\n     * \u767c\u9001\u7ba1\u7406\u54e1\u901a\u77e5\n     *\/\n    private function send_admin_notification($booking_id, $booking_data) {\n        $admin_email = get_option('admin_email');\n        \n        $subject = '\u65b0\u5305\u8eca\u9810\u7d04\u901a\u77e5 - ' . $booking_data['customer_name'] . ' - CHT' . str_pad($booking_id, 6, '0', STR_PAD_LEFT);\n        \n        $message = \"\u6709\u65b0\u7684\u5305\u8eca\u65c5\u904a\u9810\u7d04\uff1a\\n\\n\";\n        $message .= \"\u3010\u9810\u7d04\u7de8\u865f\u3011CHT\" . str_pad($booking_id, 6, '0', STR_PAD_LEFT) . \"\\n\";\n        $message .= \"\u3010\u5ba2\u6236\u59d3\u540d\u3011{$booking_data['customer_name']}\\n\";\n        $message .= \"\u3010\u5ba2\u6236\u96fb\u8a71\u3011{$booking_data['customer_phone']}\\n\";\n        \n        \/\/ \u52a0\u5165 Email \u72c0\u614b\u63d0\u9192\n        if (!empty($booking_data['customer_email'])) {\n            $message .= \"\u3010\u5ba2\u6236Email\u3011{$booking_data['customer_email']}\\n\";\n        } else {\n            $message .= \"\u3010\u5ba2\u6236Email\u3011\u26a0\ufe0f \u672a\u63d0\u4f9b\uff08\u7121\u6cd5\u767c\u9001\u78ba\u8a8d\u4fe1\uff09\\n\";\n        }\n        \n        $message .= \"\u3010\u884c\u7a0b\u5929\u6578\u3011{$booking_data['trip_days']}\u5929\\n\";\n        $message .= \"\u3010\u51fa\u767c\u65e5\u671f\u3011{$booking_data['start_date']}\\n\";\n        $message .= \"\u3010\u7e3d\u91d1\u984d\u3011NT$ \" . number_format($booking_data['total_price']) . \"\\n\";\n        $message .= \"\u203b \u50f9\u683c\u5df2\u542b\u7a05\\n\";\n        \n        \/\/ \u53f8\u6a5f\u5b89\u6392\u8cc7\u8a0a\n        if ($booking_data['driver_accommodation'] === 'book') {\n            $message .= \"\u3010\u53f8\u6a5f\u4f4f\u5bbf\u3011\u9700\u4ee3\u8a02\u4f4f\u5bbf\\n\";\n        }\n        if ($booking_data['driver_meals'] === 'allowance') {\n            $message .= \"\u3010\u53f8\u6a5f\u9910\u8cbb\u3011\u9700\u8981\u88dc\u8cbc\\n\";\n        }\n        \n        if (!empty($booking_data['mountain_detection']['needs_manual_check'])) {\n            $message .= \"\\n\u26a0\ufe0f \u3010\u9700\u8981\u78ba\u8a8d\u3011\u6b64\u884c\u7a0b\u53ef\u80fd\u5305\u542b\u5c71\u5340\u8def\u7dda\uff0c\u8acb\u4eba\u5de5\u78ba\u8a8d\u662f\u5426\u6536\u53d6\u5c71\u5340\u52a0\u50f9\u8cbb\u7528\u3002\\n\";\n        }\n        \n        $edit_link = admin_url('post.php?post=' . $booking_id . '&action=edit');\n        $message .= \"\\n\u3010\u7ba1\u7406\u9023\u7d50\u3011{$edit_link}\\n\";\n        \n        $headers = array('Content-Type: text\/plain; charset=UTF-8');\n        \n        wp_mail($admin_email, $subject, $message, $headers);\n    }\n}\n\n\/\/ \u521d\u59cb\u5316\nNineOVan_Charter_Ajax_Handlers::get_instance();\n\n\/**\n * \u5168\u57df\u8f14\u52a9\u51fd\u5f0f\n *\/\n\n\/\/ \u8a08\u7b97\u5305\u8eca\u50f9\u683c\nif (!function_exists('_9o_van_calculate_charter_price')) {\n    function _9o_van_calculate_charter_price($data) {\n        \/\/ \u9019\u500b\u51fd\u5f0f\u53ef\u88ab\u5176\u4ed6\u6a21\u7d44\u547c\u53eb\u4f86\u8a08\u7b97\u50f9\u683c\n        $handler = NineOVan_Charter_Ajax_Handlers::get_instance();\n        \n        \/\/ \u6a21\u64ec POST \u8acb\u6c42\n        $_POST = $data;\n        \n        \/\/ \u57f7\u884c\u8a08\u7b97\n        ob_start();\n        $handler->handle_price_calculation();\n        $output = ob_get_clean();\n        \n        \/\/ \u89e3\u6790\u7d50\u679c\n        $result = json_decode($output, true);\n        return $result;\n    }\n}\n\n\/\/ \u9a57\u8b49\u5305\u8eca\u9810\u7d04\nif (!function_exists('_9o_van_validate_charter_ajax')) {\n    function _9o_van_validate_charter_ajax($data) {\n        return NineOVan_Charter_Validator::get_instance()->validate_booking($data);\n    }\n}\n\n\/\/ \u8a18\u9304\u6a21\u7d44\u8f09\u5165\nif (defined('_9O_VAN_DEBUG') && _9O_VAN_DEBUG) {\n    error_log('[25-Charter-Ajax-Handlers] \u6a21\u7d44\u5df2\u8f09\u5165 - v1.0.0');\n}","active":true,"priority":25,"modified":"2025-09-14 14:27:07","revision":"1"}]}