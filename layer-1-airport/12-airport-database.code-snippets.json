{"generator":"Code Snippets v3.7.0","date_created":"2025-09-15 14:39","snippets":[{"id":87,"name":" 12-Airport-Database","code":"\/**\n * ============================================================================\n * Snippet: 12-Airport-Database\n * Title: 9o Van \u6a5f\u5834\u63a5\u9001\u8cc7\u6599\u5eab\u64cd\u4f5c\n * Description: \u8655\u7406\u6a5f\u5834\u63a5\u9001\u9810\u7d04\u7684 CRUD \u64cd\u4f5c\u8207\u67e5\u8a62\u529f\u80fd\n * Version: 1.0.0\n * Author: 9o Van Development Team\n * Created: 2025-09-14\n * Modified: 2025-09-14\n * Priority: 12\n * Dependencies: 00-Global-Constants, 01-Database-Schema\n * Hook: Run everywhere\n * ============================================================================\n *\/\n\n\/\/ \u9632\u6b62\u76f4\u63a5\u8a2a\u554f\nif (!defined('ABSPATH')) {\n    exit;\n}\n\n\/**\n * \u6a5f\u5834\u63a5\u9001\u8cc7\u6599\u5eab\u64cd\u4f5c\u985e\u5225\n *\/\nclass NineOVan_Airport_Database {\n    \n    \/**\n     * \u53d6\u5f97\u8cc7\u6599\u8868\u540d\u7a31\n     *\/\n    private static function get_table_name() {\n        global $wpdb;\n        return $wpdb->prefix . '9o_van_bookings';\n    }\n    \n    \/**\n     * \u5efa\u7acb\u9810\u7d04\n     *\/\n    public static function create_booking($data) {\n        global $wpdb;\n        \n        \/\/ \u751f\u6210\u9810\u7d04\u7de8\u865f\n        $booking_number = self::generate_booking_number('APT');\n        \n        \/\/ \u6e96\u5099\u8cc7\u6599\n        $insert_data = array(\n            'booking_number' => $booking_number,\n            'booking_type' => 'airport',\n            'customer_name' => sanitize_text_field($data['customer_name'] ?? ''),\n            'customer_phone' => sanitize_text_field($data['customer_phone'] ?? ''),\n            'customer_email' => sanitize_email($data['customer_email'] ?? ''),\n            'service_type' => sanitize_text_field($data['service_type'] ?? 'pickup'),\n            'airport' => sanitize_text_field($data['airport'] ?? 'TPE'),\n            'trip_type' => sanitize_text_field($data['trip_type'] ?? 'oneway'),\n            'service_date' => sanitize_text_field($data['service_date'] ?? ''),\n            'service_time' => sanitize_text_field($data['service_time'] ?? ''),\n            'flight_number' => sanitize_text_field($data['flight_number'] ?? ''),\n            'passengers' => intval($data['passengers'] ?? 1),\n            'pickup_address' => sanitize_text_field($data['pickup_address'] ?? ''),\n            'dropoff_address' => sanitize_text_field($data['dropoff_address'] ?? ''),\n            'stops' => maybe_serialize($data['stops'] ?? array()),\n            'return_data' => maybe_serialize($data['return_data'] ?? null),\n            'addons' => maybe_serialize($data['addons'] ?? array()),\n            'price_breakdown' => maybe_serialize($data['price_breakdown'] ?? array()),\n            'total_price' => floatval($data['total_price'] ?? 0),\n            'currency' => 'TWD',\n            'booking_status' => 'pending',\n            'payment_status' => 'unpaid',\n            'customer_notes' => sanitize_textarea_field($data['customer_notes'] ?? ''),\n            'admin_notes' => '',\n            'source' => $data['source'] ?? 'website',\n            'ip_address' => $_SERVER['REMOTE_ADDR'] ?? '',\n            'created_at' => current_time('mysql'),\n            'updated_at' => current_time('mysql')\n        );\n        \n        \/\/ \u63d2\u5165\u8cc7\u6599\u5eab\n        $result = $wpdb->insert(\n            self::get_table_name(),\n            $insert_data\n        );\n        \n        if ($result === false) {\n            return array('success' => false, 'error' => $wpdb->last_error);\n        }\n        \n        $booking_id = $wpdb->insert_id;\n        \n        return array(\n            'success' => true,\n            'booking_id' => $booking_id,\n            'booking_number' => $booking_number\n        );\n    }\n    \n    \/**\n     * \u53d6\u5f97\u9810\u7d04\n     *\/\n    public static function get_booking($booking_id) {\n        global $wpdb;\n        \n        $booking = $wpdb->get_row(\n            $wpdb->prepare(\n                \"SELECT * FROM \" . self::get_table_name() . \" WHERE id = %d\",\n                $booking_id\n            ),\n            ARRAY_A\n        );\n        \n        if (!$booking) {\n            return null;\n        }\n        \n        \/\/ \u53cd\u5e8f\u5217\u5316\u8cc7\u6599\n        $booking['stops'] = maybe_unserialize($booking['stops']);\n        $booking['return_data'] = maybe_unserialize($booking['return_data']);\n        $booking['addons'] = maybe_unserialize($booking['addons']);\n        $booking['price_breakdown'] = maybe_unserialize($booking['price_breakdown']);\n        \n        return $booking;\n    }\n    \n    \/**\n     * \u6839\u64da\u9810\u7d04\u7de8\u865f\u53d6\u5f97\u9810\u7d04\n     *\/\n    public static function get_booking_by_number($booking_number) {\n        global $wpdb;\n        \n        $booking = $wpdb->get_row(\n            $wpdb->prepare(\n                \"SELECT * FROM \" . self::get_table_name() . \" WHERE booking_number = %s\",\n                $booking_number\n            ),\n            ARRAY_A\n        );\n        \n        if (!$booking) {\n            return null;\n        }\n        \n        \/\/ \u53cd\u5e8f\u5217\u5316\u8cc7\u6599\n        $booking['stops'] = maybe_unserialize($booking['stops']);\n        $booking['return_data'] = maybe_unserialize($booking['return_data']);\n        $booking['addons'] = maybe_unserialize($booking['addons']);\n        $booking['price_breakdown'] = maybe_unserialize($booking['price_breakdown']);\n        \n        return $booking;\n    }\n    \n    \/**\n     * \u66f4\u65b0\u9810\u7d04\n     *\/\n    public static function update_booking($booking_id, $data) {\n        global $wpdb;\n        \n        \/\/ \u6e96\u5099\u66f4\u65b0\u8cc7\u6599\n        $update_data = array();\n        \n        \/\/ \u53ef\u66f4\u65b0\u7684\u6587\u5b57\u6b04\u4f4d\n        $text_fields = array(\n            'customer_name', 'customer_phone', 'customer_email',\n            'service_type', 'airport', 'trip_type',\n            'service_date', 'service_time', 'flight_number',\n            'pickup_address', 'dropoff_address',\n            'booking_status', 'payment_status',\n            'customer_notes', 'admin_notes'\n        );\n        \n        foreach ($text_fields as $field) {\n            if (isset($data[$field])) {\n                $update_data[$field] = sanitize_text_field($data[$field]);\n            }\n        }\n        \n        \/\/ \u6578\u5b57\u6b04\u4f4d\n        if (isset($data['passengers'])) {\n            $update_data['passengers'] = intval($data['passengers']);\n        }\n        if (isset($data['total_price'])) {\n            $update_data['total_price'] = floatval($data['total_price']);\n        }\n        \n        \/\/ \u5e8f\u5217\u5316\u6b04\u4f4d\n        if (isset($data['stops'])) {\n            $update_data['stops'] = maybe_serialize($data['stops']);\n        }\n        if (isset($data['return_data'])) {\n            $update_data['return_data'] = maybe_serialize($data['return_data']);\n        }\n        if (isset($data['addons'])) {\n            $update_data['addons'] = maybe_serialize($data['addons']);\n        }\n        if (isset($data['price_breakdown'])) {\n            $update_data['price_breakdown'] = maybe_serialize($data['price_breakdown']);\n        }\n        \n        \/\/ \u66f4\u65b0\u6642\u9593\n        $update_data['updated_at'] = current_time('mysql');\n        \n        \/\/ \u57f7\u884c\u66f4\u65b0\n        $result = $wpdb->update(\n            self::get_table_name(),\n            $update_data,\n            array('id' => $booking_id)\n        );\n        \n        if ($result === false) {\n            return array('success' => false, 'error' => $wpdb->last_error);\n        }\n        \n        return array('success' => true, 'booking_id' => $booking_id);\n    }\n    \n    \/**\n     * \u522a\u9664\u9810\u7d04\n     *\/\n    public static function delete_booking($booking_id, $soft_delete = true) {\n        global $wpdb;\n        \n        if ($soft_delete) {\n            \/\/ \u8edf\u522a\u9664\uff1a\u53ea\u66f4\u65b0\u72c0\u614b\n            return self::update_booking($booking_id, array(\n                'booking_status' => 'deleted'\n            ));\n        } else {\n            \/\/ \u786c\u522a\u9664\uff1a\u5f9e\u8cc7\u6599\u5eab\u79fb\u9664\n            $result = $wpdb->delete(\n                self::get_table_name(),\n                array('id' => $booking_id)\n            );\n            \n            if ($result === false) {\n                return array('success' => false, 'error' => $wpdb->last_error);\n            }\n            \n            return array('success' => true);\n        }\n    }\n    \n    \/**\n     * \u67e5\u8a62\u9810\u7d04\u5217\u8868\n     *\/\n    public static function get_bookings($args = array()) {\n        global $wpdb;\n        \n        \/\/ \u9810\u8a2d\u53c3\u6578\n        $defaults = array(\n            'booking_status' => '',\n            'payment_status' => '',\n            'service_type' => '',\n            'airport' => '',\n            'date_from' => '',\n            'date_to' => '',\n            'customer_search' => '',\n            'orderby' => 'created_at',\n            'order' => 'DESC',\n            'limit' => 20,\n            'offset' => 0\n        );\n        \n        $args = wp_parse_args($args, $defaults);\n        \n        \/\/ \u5efa\u7acb\u67e5\u8a62\n        $where = array(\"booking_type = 'airport'\");\n        $where_values = array();\n        \n        \/\/ \u72c0\u614b\u7be9\u9078\n        if (!empty($args['booking_status'])) {\n            $where[] = 'booking_status = %s';\n            $where_values[] = $args['booking_status'];\n        }\n        \n        if (!empty($args['payment_status'])) {\n            $where[] = 'payment_status = %s';\n            $where_values[] = $args['payment_status'];\n        }\n        \n        if (!empty($args['service_type'])) {\n            $where[] = 'service_type = %s';\n            $where_values[] = $args['service_type'];\n        }\n        \n        if (!empty($args['airport'])) {\n            $where[] = 'airport = %s';\n            $where_values[] = $args['airport'];\n        }\n        \n        \/\/ \u65e5\u671f\u7bc4\u570d\n        if (!empty($args['date_from'])) {\n            $where[] = 'service_date >= %s';\n            $where_values[] = $args['date_from'];\n        }\n        \n        if (!empty($args['date_to'])) {\n            $where[] = 'service_date <= %s';\n            $where_values[] = $args['date_to'];\n        }\n        \n        \/\/ \u5ba2\u6236\u641c\u5c0b\n        if (!empty($args['customer_search'])) {\n            $where[] = '(customer_name LIKE %s OR customer_phone LIKE %s OR customer_email LIKE %s)';\n            $search_term = '%' . $wpdb->esc_like($args['customer_search']) . '%';\n            $where_values[] = $search_term;\n            $where_values[] = $search_term;\n            $where_values[] = $search_term;\n        }\n        \n        \/\/ \u6392\u9664\u5df2\u522a\u9664\n        $where[] = \"(booking_status != 'deleted' OR booking_status IS NULL)\";\n        \n        \/\/ \u7d44\u5408 WHERE \u5b50\u53e5\n        $where_clause = implode(' AND ', $where);\n        \n        \/\/ \u6392\u5e8f\n        $orderby = sanitize_sql_orderby($args['orderby']);\n        if (!$orderby) {\n            $orderby = 'created_at';\n        }\n        $order = strtoupper($args['order']) === 'ASC' ? 'ASC' : 'DESC';\n        \n        \/\/ \u5efa\u7acb\u67e5\u8a62\n        $query = \"SELECT * FROM \" . self::get_table_name() . \n                \" WHERE \" . $where_clause .\n                \" ORDER BY \" . $orderby . \" \" . $order .\n                \" LIMIT %d OFFSET %d\";\n        \n        $where_values[] = $args['limit'];\n        $where_values[] = $args['offset'];\n        \n        \/\/ \u57f7\u884c\u67e5\u8a62\n        if (empty($where_values)) {\n            $results = $wpdb->get_results($query, ARRAY_A);\n        } else {\n            $results = $wpdb->get_results(\n                $wpdb->prepare($query, $where_values),\n                ARRAY_A\n            );\n        }\n        \n        \/\/ \u53cd\u5e8f\u5217\u5316\u8cc7\u6599\n        foreach ($results as &$booking) {\n            $booking['stops'] = maybe_unserialize($booking['stops']);\n            $booking['return_data'] = maybe_unserialize($booking['return_data']);\n            $booking['addons'] = maybe_unserialize($booking['addons']);\n            $booking['price_breakdown'] = maybe_unserialize($booking['price_breakdown']);\n        }\n        \n        \/\/ \u53d6\u5f97\u7e3d\u6578\n        $count_query = \"SELECT COUNT(*) FROM \" . self::get_table_name() . \" WHERE \" . $where_clause;\n        if (count($where_values) > 2) {\n            array_pop($where_values); \/\/ \u79fb\u9664 offset\n            array_pop($where_values); \/\/ \u79fb\u9664 limit\n        }\n        \n        if (empty($where_values)) {\n            $total = $wpdb->get_var($count_query);\n        } else {\n            $total = $wpdb->get_var($wpdb->prepare($count_query, $where_values));\n        }\n        \n        return array(\n            'bookings' => $results,\n            'total' => intval($total),\n            'pages' => ceil($total \/ $args['limit'])\n        );\n    }\n    \n    \/**\n     * \u53d6\u5f97\u4eca\u65e5\u9810\u7d04\n     *\/\n    public static function get_today_bookings() {\n        return self::get_bookings(array(\n            'date_from' => current_time('Y-m-d'),\n            'date_to' => current_time('Y-m-d'),\n            'orderby' => 'service_time',\n            'order' => 'ASC',\n            'limit' => 100\n        ));\n    }\n    \n    \/**\n     * \u53d6\u5f97\u5f85\u8655\u7406\u9810\u7d04\n     *\/\n    public static function get_pending_bookings() {\n        return self::get_bookings(array(\n            'booking_status' => 'pending',\n            'orderby' => 'created_at',\n            'order' => 'ASC',\n            'limit' => 50\n        ));\n    }\n    \n    \/**\n     * \u66f4\u65b0\u9810\u7d04\u72c0\u614b\n     *\/\n    public static function update_booking_status($booking_id, $status) {\n        return self::update_booking($booking_id, array(\n            'booking_status' => $status\n        ));\n    }\n    \n    \/**\n     * \u66f4\u65b0\u4ed8\u6b3e\u72c0\u614b\n     *\/\n    public static function update_payment_status($booking_id, $status) {\n        return self::update_booking($booking_id, array(\n            'payment_status' => $status\n        ));\n    }\n    \n    \/**\n     * \u6aa2\u67e5\u6642\u9593\u885d\u7a81\n     *\/\n    public static function check_time_conflict($date, $time, $exclude_id = null) {\n        global $wpdb;\n        \n        \/\/ \u8a08\u7b97\u6642\u9593\u7bc4\u570d\uff08\u524d\u5f8c2\u5c0f\u6642\uff09\n        $timestamp = strtotime($date . ' ' . $time);\n        $check_time_start = date('H:i:s', $timestamp - 7200);\n        $check_time_end = date('H:i:s', $timestamp + 7200);\n        \n        $query = \"SELECT * FROM \" . self::get_table_name() . \n                \" WHERE service_date = %s\" .\n                \" AND service_time BETWEEN %s AND %s\" .\n                \" AND booking_status NOT IN ('cancelled', 'deleted')\";\n        \n        $params = array($date, $check_time_start, $check_time_end);\n        \n        if ($exclude_id) {\n            $query .= \" AND id != %d\";\n            $params[] = $exclude_id;\n        }\n        \n        $conflicts = $wpdb->get_results(\n            $wpdb->prepare($query, $params),\n            ARRAY_A\n        );\n        \n        return !empty($conflicts) ? $conflicts : false;\n    }\n    \n    \/**\n     * \u53d6\u5f97\u7d71\u8a08\u8cc7\u6599\n     *\/\n    public static function get_statistics($date_from = null, $date_to = null) {\n        global $wpdb;\n        $table = self::get_table_name();\n        \n        $where = \"booking_type = 'airport'\";\n        $params = array();\n        \n        if ($date_from) {\n            $where .= \" AND service_date >= %s\";\n            $params[] = $date_from;\n        }\n        \n        if ($date_to) {\n            $where .= \" AND service_date <= %s\";\n            $params[] = $date_to;\n        }\n        \n        \/\/ \u7e3d\u9810\u7d04\u6578\n        $total_query = \"SELECT COUNT(*) FROM $table WHERE $where\";\n        $total_bookings = empty($params) ? \n            $wpdb->get_var($total_query) : \n            $wpdb->get_var($wpdb->prepare($total_query, $params));\n        \n        \/\/ \u7e3d\u6536\u5165\n        $revenue_query = \"SELECT SUM(total_price) FROM $table WHERE $where AND payment_status = 'paid'\";\n        $total_revenue = empty($params) ? \n            $wpdb->get_var($revenue_query) : \n            $wpdb->get_var($wpdb->prepare($revenue_query, $params));\n        \n        return array(\n            'total_bookings' => intval($total_bookings),\n            'total_revenue' => floatval($total_revenue),\n            'average_price' => $total_bookings > 0 ? round($total_revenue \/ $total_bookings, 2) : 0\n        );\n    }\n    \n    \/**\n     * \u751f\u6210\u9810\u7d04\u7de8\u865f\n     *\/\n    private static function generate_booking_number($prefix = 'APT') {\n        global $wpdb;\n        \n        $date_part = date('Ymd');\n        $random_part = str_pad(wp_rand(1, 9999), 4, '0', STR_PAD_LEFT);\n        $booking_number = $prefix . $date_part . $random_part;\n        \n        \/\/ \u6aa2\u67e5\u662f\u5426\u91cd\u8907\n        $exists = $wpdb->get_var(\n            $wpdb->prepare(\n                \"SELECT COUNT(*) FROM \" . self::get_table_name() . \" WHERE booking_number = %s\",\n                $booking_number\n            )\n        );\n        \n        if ($exists > 0) {\n            \/\/ \u5982\u679c\u91cd\u8907\uff0c\u905e\u8ff4\u751f\u6210\u65b0\u7684\n            return self::generate_booking_number($prefix);\n        }\n        \n        return $booking_number;\n    }\n}\n\n\/\/ \u63d0\u4f9b\u5168\u57df\u51fd\u6578\nif (!function_exists('_9o_van_db_create_airport_booking')) {\n    function _9o_van_db_create_airport_booking($data) {\n        return NineOVan_Airport_Database::create_booking($data);\n    }\n}\n\nif (!function_exists('_9o_van_db_get_airport_booking')) {\n    function _9o_van_db_get_airport_booking($booking_id) {\n        return NineOVan_Airport_Database::get_booking($booking_id);\n    }\n}\n\nif (!function_exists('_9o_van_db_update_airport_booking')) {\n    function _9o_van_db_update_airport_booking($booking_id, $data) {\n        return NineOVan_Airport_Database::update_booking($booking_id, $data);\n    }\n}\n\nif (!function_exists('_9o_van_db_get_airport_bookings')) {\n    function _9o_van_db_get_airport_bookings($args = array()) {\n        return NineOVan_Airport_Database::get_bookings($args);\n    }\n}\n\nif (!function_exists('_9o_van_db_get_airport_statistics')) {\n    function _9o_van_db_get_airport_statistics($date_from = null, $date_to = null) {\n        return NineOVan_Airport_Database::get_statistics($date_from, $date_to);\n    }\n}","active":true,"priority":12,"modified":"2025-09-14 01:33:19","revision":"1"}]}