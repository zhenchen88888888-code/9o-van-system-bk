{"generator":"Code Snippets v3.7.0","date_created":"2025-09-15 14:39","snippets":[{"id":88,"name":"13-Airport-Calculator","code":"\/**\n * ============================================================================\n * Snippet: 13-Airport-Calculator\n * Title: 9o Van \u6a5f\u5834\u63a5\u9001\u50f9\u683c\u8a08\u7b97\u5f15\u64ce\n * Description: \u6574\u5408\u6240\u6709\u50f9\u683c\u8a2d\u5b9a\uff0c\u8a08\u7b97\u6a5f\u5834\u63a5\u9001\u670d\u52d9\u7684\u7e3d\u50f9\n * Version: 1.0.0\n * Author: 9o Van Development Team\n * Created: 2025-09-14\n * Modified: 2025-09-14\n * Priority: 13\n * Dependencies: 00-Global-Constants, 10-Airport-Settings, 02-Google-Maps-Loader\n * Hook: Run everywhere\n * ============================================================================\n *\/\n\n\/\/ \u9632\u6b62\u76f4\u63a5\u8a2a\u554f\nif (!defined('ABSPATH')) {\n    exit;\n}\n\n\/**\n * \u6a5f\u5834\u63a5\u9001\u50f9\u683c\u8a08\u7b97\u985e\u5225\n *\/\nclass NineOVan_Airport_Calculator {\n    \n    \/**\n     * Google Maps API Key\n     *\/\n    private static $google_api_key = null;\n    \n    \/**\n     * \u521d\u59cb\u5316\n     *\/\n    public static function init() {\n        \/\/ \u53d6\u5f97 Google Maps API Key\n        if (defined('NINE_O_VAN_GOOGLE_MAPS_API_KEY')) {\n            self::$google_api_key = NINE_O_VAN_GOOGLE_MAPS_API_KEY;\n        } elseif (function_exists('_9o_van_get_google_maps_api_key')) {\n            self::$google_api_key = _9o_van_get_google_maps_api_key();\n        }\n    }\n    \n    \/**\n     * \u8a08\u7b97\u7e3d\u50f9\u683c - \u4e3b\u8981\u51fd\u6578\n     *\/\n    public static function calculate_total_price($data) {\n        $breakdown = array();\n        $subtotal = 0;\n        \n        \/\/ 1. \u57fa\u672c\u8cbb\u7528\n        $base_price = self::calculate_base_price(\n            $data['airport'] ?? 'TPE',\n            $data['destination_city'] ?? '',\n            $data['service_type'] ?? 'pickup'\n        );\n        $breakdown['base_price'] = $base_price;\n        $subtotal += $base_price;\n        \n        \/\/ 2. \u591c\u9593\u52a0\u50f9\n        $night_surcharge = self::calculate_night_surcharge(\n            $data['service_time'] ?? ''\n        );\n        $breakdown['night_surcharge'] = $night_surcharge;\n        $subtotal += $night_surcharge;\n        \n        \/\/ 3. \u504f\u9060\u5730\u5340\u52a0\u50f9\n        $remote_result = self::calculate_remote_area_surcharge(\n            $data['main_address'] ?? '',\n            $data['service_type'] ?? 'pickup'\n        );\n        $breakdown['remote_surcharge'] = $remote_result['surcharge'];\n        $breakdown['remote_area_name'] = $remote_result['area_name'];\n        $subtotal += $remote_result['surcharge'];\n        \n        \/\/ 4. \u505c\u9760\u9ede\u8cbb\u7528\n        $stopover_result = self::calculate_stopover_charges(\n            $data['stops'] ?? array(),\n            $data['service_type'] ?? 'pickup',\n            $data['airport'] ?? 'TPE',\n            $data['main_address'] ?? ''\n        );\n        $breakdown['stopover_charge'] = $stopover_result['total'];\n        $breakdown['stopover_details'] = $stopover_result['details'];\n        $subtotal += $stopover_result['total'];\n        \n        \/\/ 5. \u52a0\u8cfc\u9805\u76ee\n        $addon_charges = self::calculate_addon_charges($data['addons'] ?? array());\n        $breakdown['addon_charge'] = $addon_charges['total'];\n        $breakdown['addon_details'] = $addon_charges['details'];\n        $subtotal += $addon_charges['total'];\n        \n        $breakdown['subtotal'] = $subtotal;\n        \n        \/\/ 6. \u4f86\u56de\u7a0b\u8655\u7406\n        if (($data['trip_type'] ?? 'oneway') === 'roundtrip') {\n            \/\/ \u8a08\u7b97\u56de\u7a0b\n            $return_subtotal = self::calculate_return_trip(\n                $data['return_data'] ?? array(),\n                $data\n            );\n            \n            $breakdown['return_subtotal'] = $return_subtotal['subtotal'];\n            $breakdown['return_breakdown'] = $return_subtotal['breakdown'];\n            \n            \/\/ \u8a08\u7b97\u7e3d\u50f9\uff08\u542b9\u6298\uff09\n            $original_total = $subtotal + $return_subtotal['subtotal'];\n            $total = self::apply_roundtrip_discount($original_total);\n            $discount = $original_total - $total;\n            \n            $breakdown['original_total'] = $original_total;\n            $breakdown['discount'] = $discount;\n            $breakdown['total'] = $total;\n        } else {\n            $breakdown['total'] = $subtotal;\n        }\n        \n        return $breakdown;\n    }\n    \n    \/**\n     * \u8a08\u7b97\u57fa\u672c\u8cbb\u7528\n     *\/\n    private static function calculate_base_price($airport, $city, $service_type) {\n        \/\/ \u4f7f\u7528 10-Airport-Settings \u7684\u50f9\u683c\u8868\n        if (class_exists('NineOVan\\Airport\\AirportSettings')) {\n            return \\NineOVan\\Airport\\AirportSettings::get_base_price($airport, $city);\n        }\n        \n        \/\/ \u5099\u7528\u50f9\u683c\u8868\n        $prices = array(\n            'TPE' => array(\n                '\u53f0\u5317\u5e02' => 3000,\n                '\u65b0\u5317\u5e02' => 3000,\n                '\u57fa\u9686\u5e02' => 3500,\n                '\u6843\u5712\u5e02' => 2800,\n                '\u5b9c\u862d\u7e23' => 4900,\n                '\u65b0\u7af9\u5730\u5340' => 3500,\n                '\u82d7\u6817\u7e23' => 4900,\n                '\u53f0\u4e2d\u5e02' => 6000,\n                '\u5f70\u5316\u7e23' => 7600,\n                '\u5357\u6295\u7e23' => 8500,\n                '\u96f2\u6797\u7e23' => 9400,\n                '\u5609\u7fa9\u5730\u5340' => 9800,\n                '\u53f0\u5357\u5e02' => 11000,\n                '\u9ad8\u96c4\u5e02' => 12000,\n                '\u5c4f\u6771\u7e23' => 13000,\n                '\u82b1\u84ee\u7e23' => 13000,\n                '\u53f0\u6771\u7e23' => 14000\n            ),\n            'TSA' => array(\n                '\u53f0\u5317\u5e02' => 3000,\n                '\u65b0\u5317\u5e02' => 3000,\n                '\u57fa\u9686\u5e02' => 3500,\n                '\u6843\u5712\u5e02' => 3100,\n                '\u5b9c\u862d\u7e23' => 4900,\n                '\u65b0\u7af9\u5730\u5340' => 3800,\n                '\u82d7\u6817\u7e23' => 5400,\n                '\u53f0\u4e2d\u5e02' => 6400,\n                '\u5f70\u5316\u7e23' => 8000,\n                '\u5357\u6295\u7e23' => 8900,\n                '\u96f2\u6797\u7e23' => 9800,\n                '\u5609\u7fa9\u5730\u5340' => 10300,\n                '\u53f0\u5357\u5e02' => 11500,\n                '\u9ad8\u96c4\u5e02' => 12500,\n                '\u5c4f\u6771\u7e23' => 13000,\n                '\u82b1\u84ee\u7e23' => 13000,\n                '\u53f0\u6771\u7e23' => 14000\n            )\n        );\n        \n        $airport_prices = isset($prices[$airport]) ? $prices[$airport] : $prices['TPE'];\n        return isset($airport_prices[$city]) ? $airport_prices[$city] : 3000;\n    }\n    \n    \/**\n     * \u8a08\u7b97\u591c\u9593\u52a0\u50f9\n     *\/\n    private static function calculate_night_surcharge($time) {\n        if (empty($time)) {\n            return 0;\n        }\n        \n        \/\/ \u4f7f\u7528 10-Airport-Settings \u7684\u591c\u9593\u52a0\u50f9\u8a2d\u5b9a\n        if (class_exists('NineOVan\\Airport\\AirportSettings')) {\n            return \\NineOVan\\Airport\\AirportSettings::calculate_night_surcharge($time);\n        }\n        \n        \/\/ \u5099\u7528\u8a08\u7b97\n        $hour = intval(date('H', strtotime($time)));\n        if ($hour >= 22 || $hour < 8) {\n            return 200;\n        }\n        \n        return 0;\n    }\n    \n    \/**\n     * \u8a08\u7b97\u504f\u9060\u5730\u5340\u52a0\u50f9\n     *\/\n    private static function calculate_remote_area_surcharge($address, $service_type) {\n        if (empty($address)) {\n            return array('surcharge' => 0, 'area_name' => null);\n        }\n        \n        \/\/ \u53d6\u5f97\u5730\u5740\u5ea7\u6a19\n        $coords = self::get_address_coordinates($address);\n        if (!$coords) {\n            return array('surcharge' => 0, 'area_name' => null);\n        }\n        \n        \/\/ \u4f7f\u7528 10-Airport-Settings \u7684\u504f\u9060\u5730\u5340\u6aa2\u67e5\n        if (class_exists('NineOVan\\Airport\\AirportSettings')) {\n            return \\NineOVan\\Airport\\AirportSettings::check_remote_area_surcharge(\n                $coords['lat'],\n                $coords['lng']\n            );\n        }\n        \n        return array('surcharge' => 0, 'area_name' => null);\n    }\n    \n    \/**\n     * \u8a08\u7b97\u505c\u9760\u9ede\u8cbb\u7528\n     *\/\n    private static function calculate_stopover_charges($stops, $service_type, $airport, $main_address) {\n        $total = 0;\n        $details = array();\n        \n        if (empty($stops) || !is_array($stops)) {\n            return array('total' => 0, 'details' => array());\n        }\n        \n        \/\/ \u5efa\u7acb\u5b8c\u6574\u8def\u7dda\n        $route_points = self::build_route_points($stops, $service_type, $airport, $main_address);\n        \n        \/\/ \u8a08\u7b97\u6bcf\u6bb5\u8ddd\u96e2\u548c\u8cbb\u7528\n        for ($i = 0; $i < count($route_points) - 1; $i++) {\n            $from = $route_points[$i];\n            $to = $route_points[$i + 1];\n            \n            \/\/ \u5224\u65b7\u662f\u5426\u9700\u8981\u6536\u8cbb\n            $should_charge = self::should_charge_segment($i, $service_type, count($route_points));\n            \n            \/\/ \u8a08\u7b97\u8ddd\u96e2\n            $distance = self::calculate_distance($from, $to);\n            \n            \/\/ \u8a08\u7b97\u8cbb\u7528\n            $fee = $should_charge ? self::calculate_distance_fee($distance) : 0;\n            $total += $fee;\n            \n            $details[] = array(\n                'segment' => ($i + 1),\n                'from' => self::truncate_address($from),\n                'to' => self::truncate_address($to),\n                'distance' => round($distance, 1),\n                'fee' => $fee,\n                'charged' => $should_charge\n            );\n        }\n        \n        return array('total' => $total, 'details' => $details);\n    }\n    \n    \/**\n     * \u5efa\u7acb\u8def\u7dda\u9ede\n     *\/\n    private static function build_route_points($stops, $service_type, $airport, $main_address) {\n        $points = array();\n        $airport_address = self::get_airport_address($airport);\n        \n        if ($service_type === 'pickup') {\n            \/\/ \u63a5\u6a5f\uff1a\u6a5f\u5834 -> \u505c\u9760\u9ede -> \u76ee\u7684\u5730\n            $points[] = $airport_address;\n            foreach ($stops as $stop) {\n                if (!empty($stop['address'])) {\n                    $points[] = $stop['address'];\n                }\n            }\n            if (!empty($main_address)) {\n                $points[] = $main_address;\n            }\n        } else {\n            \/\/ \u9001\u6a5f\uff1a\u51fa\u767c\u5730 -> \u505c\u9760\u9ede -> \u6a5f\u5834\n            if (!empty($main_address)) {\n                $points[] = $main_address;\n            }\n            foreach ($stops as $stop) {\n                if (!empty($stop['address'])) {\n                    $points[] = $stop['address'];\n                }\n            }\n            $points[] = $airport_address;\n        }\n        \n        return $points;\n    }\n    \n    \/**\n     * \u5224\u65b7\u8def\u6bb5\u662f\u5426\u6536\u8cbb\n     *\/\n    private static function should_charge_segment($segment_index, $service_type, $total_segments) {\n        if ($service_type === 'pickup') {\n            \/\/ \u63a5\u6a5f\uff1a\u7b2c\u4e00\u6bb5\uff08\u6a5f\u5834\u5230\u7b2c\u4e00\u500b\u505c\u9760\u9ede\uff09\u514d\u8cbb\n            return $segment_index !== 0;\n        } else {\n            \/\/ \u9001\u6a5f\uff1a\u6700\u5f8c\u4e00\u6bb5\uff08\u6700\u5f8c\u505c\u9760\u9ede\u5230\u6a5f\u5834\uff09\u514d\u8cbb\n            return $segment_index !== ($total_segments - 2);\n        }\n    }\n    \n    \/**\n     * \u8a08\u7b97\u5169\u5730\u5740\u9593\u7684\u8ddd\u96e2\n     *\/\n    private static function calculate_distance($origin, $destination) {\n        \/\/ \u512a\u5148\u4f7f\u7528 Google Maps API\n        if (self::$google_api_key) {\n            $distance = self::calculate_distance_google($origin, $destination);\n            if ($distance > 0) {\n                return $distance;\n            }\n        }\n        \n        \/\/ \u5099\u7528\uff1a\u4f30\u7b97\u8ddd\u96e2\n        return self::estimate_distance_fallback($origin, $destination);\n    }\n    \n    \/**\n     * \u4f7f\u7528 Google Maps API \u8a08\u7b97\u8ddd\u96e2\n     *\/\n    private static function calculate_distance_google($origin, $destination) {\n        if (!self::$google_api_key) {\n            return 0;\n        }\n        \n        $origin = urlencode($origin . ', \u53f0\u7063');\n        $destination = urlencode($destination . ', \u53f0\u7063');\n        \n        $url = 'https:\/\/maps.googleapis.com\/maps\/api\/distancematrix\/json';\n        $params = array(\n            'origins' => $origin,\n            'destinations' => $destination,\n            'units' => 'metric',\n            'language' => 'zh-TW',\n            'region' => 'TW',\n            'key' => self::$google_api_key\n        );\n        \n        $query_string = http_build_query($params);\n        $full_url = $url . '?' . $query_string;\n        \n        $response = wp_remote_get($full_url, array('timeout' => 10));\n        \n        if (is_wp_error($response)) {\n            return 0;\n        }\n        \n        $body = wp_remote_retrieve_body($response);\n        $data = json_decode($body, true);\n        \n        if ($data['status'] !== 'OK' || \n            !isset($data['rows'][0]['elements'][0]['distance']['value'])) {\n            return 0;\n        }\n        \n        $distance_meters = $data['rows'][0]['elements'][0]['distance']['value'];\n        return $distance_meters \/ 1000; \/\/ \u8f49\u63db\u70ba\u516c\u91cc\n    }\n    \n    \/**\n     * \u5099\u7528\u8ddd\u96e2\u4f30\u7b97\n     *\/\n    private static function estimate_distance_fallback($origin, $destination) {\n        \/\/ \u7c21\u55ae\u7684\u57ce\u5e02\u9593\u8ddd\u96e2\u4f30\u7b97\n        $city_distances = array(\n            '\u53f0\u5317-\u65b0\u5317' => 10,\n            '\u53f0\u5317-\u57fa\u9686' => 25,\n            '\u53f0\u5317-\u6843\u5712' => 30,\n            '\u53f0\u5317-\u65b0\u7af9' => 70,\n            '\u53f0\u5317-\u53f0\u4e2d' => 165,\n            '\u6843\u5712-\u65b0\u7af9' => 50,\n            '\u6843\u5712-\u53f0\u4e2d' => 135,\n            '\u65b0\u7af9-\u53f0\u4e2d' => 95,\n            '\u53f0\u4e2d-\u5f70\u5316' => 25,\n            '\u53f0\u4e2d-\u5357\u6295' => 40,\n            '\u9ad8\u96c4-\u53f0\u5357' => 45,\n            '\u9ad8\u96c4-\u5c4f\u6771' => 30\n        );\n        \n        \/\/ \u5f9e\u5730\u5740\u63d0\u53d6\u57ce\u5e02\n        $origin_city = self::extract_city_from_address($origin);\n        $dest_city = self::extract_city_from_address($destination);\n        \n        if ($origin_city === $dest_city) {\n            return 8; \/\/ \u540c\u57ce\u5e02\u9810\u8a2d8\u516c\u91cc\n        }\n        \n        \/\/ \u67e5\u627e\u9810\u8a2d\u8ddd\u96e2\n        $key1 = $origin_city . '-' . $dest_city;\n        $key2 = $dest_city . '-' . $origin_city;\n        \n        if (isset($city_distances[$key1])) {\n            return $city_distances[$key1];\n        }\n        if (isset($city_distances[$key2])) {\n            return $city_distances[$key2];\n        }\n        \n        return 15; \/\/ \u9810\u8a2d15\u516c\u91cc\n    }\n    \n    \/**\n     * \u5f9e\u5730\u5740\u63d0\u53d6\u57ce\u5e02\u540d\u7a31\n     *\/\n    private static function extract_city_from_address($address) {\n        $cities = array('\u53f0\u5317', '\u65b0\u5317', '\u57fa\u9686', '\u6843\u5712', '\u65b0\u7af9', '\u82d7\u6817', \n                       '\u53f0\u4e2d', '\u5f70\u5316', '\u5357\u6295', '\u96f2\u6797', '\u5609\u7fa9', '\u53f0\u5357', \n                       '\u9ad8\u96c4', '\u5c4f\u6771', '\u5b9c\u862d', '\u82b1\u84ee', '\u53f0\u6771');\n        \n        foreach ($cities as $city) {\n            if (strpos($address, $city) !== false) {\n                return $city;\n            }\n        }\n        \n        return '\u53f0\u5317'; \/\/ \u9810\u8a2d\n    }\n    \n    \/**\n     * \u8a08\u7b97\u8ddd\u96e2\u8cbb\u7528\n     *\/\n    private static function calculate_distance_fee($distance_km) {\n        \/\/ \u4f7f\u7528 10-Airport-Settings \u7684\u8cbb\u7387\u8868\n        if (class_exists('NineOVan\\Airport\\AirportSettings')) {\n            return \\NineOVan\\Airport\\AirportSettings::calculate_stopover_charge($distance_km);\n        }\n        \n        \/\/ \u5099\u7528\u8cbb\u7387\u8868\n        if ($distance_km <= 1) return 0;\n        if ($distance_km <= 5) return 200;\n        if ($distance_km <= 10) return 300;\n        if ($distance_km <= 20) return 400;\n        if ($distance_km <= 30) return 600;\n        if ($distance_km <= 40) return 800;\n        if ($distance_km <= 50) return 1000;\n        \n        return 1000 + ceil(($distance_km - 50) \/ 10) * 200;\n    }\n    \n    \/**\n     * \u8a08\u7b97\u52a0\u8cfc\u9805\u76ee\u8cbb\u7528\n     *\/\n    private static function calculate_addon_charges($addons) {\n        $total = 0;\n        $details = array();\n        \n        \/\/ \u4f7f\u7528 10-Airport-Settings \u7684\u50f9\u683c\n        if (class_exists('NineOVan\\Airport\\AirportSettings')) {\n            return array(\n                'total' => \\NineOVan\\Airport\\AirportSettings::calculate_addon_charges($addons),\n                'details' => $addons\n            );\n        }\n        \n        \/\/ \u5099\u7528\u50f9\u683c\n        $prices = array(\n            'baby_seat' => 100,\n            'booster_seat' => 100,\n            'name_board' => 200\n        );\n        \n        foreach ($addons as $addon => $quantity) {\n            if (isset($prices[$addon]) && $quantity > 0) {\n                $item_total = $prices[$addon] * $quantity;\n                $total += $item_total;\n                $details[$addon] = array(\n                    'quantity' => $quantity,\n                    'unit_price' => $prices[$addon],\n                    'total' => $item_total\n                );\n            }\n        }\n        \n        return array('total' => $total, 'details' => $details);\n    }\n    \n    \/**\n     * \u8a08\u7b97\u56de\u7a0b\n     *\/\n    private static function calculate_return_trip($return_data, $original_data) {\n        \/\/ \u6e96\u5099\u56de\u7a0b\u8cc7\u6599\n        $return_calc_data = array(\n            'airport' => $original_data['airport'],\n            'destination_city' => $original_data['destination_city'],\n            'service_type' => $original_data['service_type'] === 'pickup' ? 'dropoff' : 'pickup',\n            'service_time' => $return_data['time'] ?? '',\n            'main_address' => $return_data['main_address'] ?? $original_data['main_address'],\n            'stops' => $return_data['stops'] ?? array(),\n            'addons' => $return_data['addons'] ?? $original_data['addons'],\n            'trip_type' => 'oneway' \/\/ \u907f\u514d\u905e\u8ff4\n        );\n        \n        \/\/ \u8a08\u7b97\u56de\u7a0b\u50f9\u683c\n        $return_breakdown = self::calculate_total_price($return_calc_data);\n        \n        return array(\n            'subtotal' => $return_breakdown['subtotal'],\n            'breakdown' => $return_breakdown\n        );\n    }\n    \n    \/**\n     * \u5957\u7528\u4f86\u56de\u7a0b\u6298\u6263\n     *\/\n    private static function apply_roundtrip_discount($total) {\n        \/\/ \u4f7f\u7528 10-Airport-Settings \u7684\u6298\u6263\u7387\n        if (class_exists('NineOVan\\Airport\\AirportSettings')) {\n            return \\NineOVan\\Airport\\AirportSettings::apply_roundtrip_discount($total);\n        }\n        \n        \/\/ \u5099\u7528\uff1a9\u6298\n        return round($total * 0.9);\n    }\n    \n    \/**\n     * \u53d6\u5f97\u5730\u5740\u5ea7\u6a19\n     *\/\n    private static function get_address_coordinates($address) {\n        if (!self::$google_api_key || empty($address)) {\n            return false;\n        }\n        \n        $address_encoded = urlencode($address . ', \u53f0\u7063');\n        $url = \"https:\/\/maps.googleapis.com\/maps\/api\/geocode\/json?address={$address_encoded}&key=\" . self::$google_api_key . \"&language=zh-TW&region=TW\";\n        \n        $response = wp_remote_get($url, array('timeout' => 10));\n        \n        if (is_wp_error($response)) {\n            return false;\n        }\n        \n        $body = wp_remote_retrieve_body($response);\n        $data = json_decode($body, true);\n        \n        if ($data['status'] === 'OK' && isset($data['results'][0]['geometry']['location'])) {\n            return array(\n                'lat' => $data['results'][0]['geometry']['location']['lat'],\n                'lng' => $data['results'][0]['geometry']['location']['lng']\n            );\n        }\n        \n        return false;\n    }\n    \n    \/**\n     * \u53d6\u5f97\u6a5f\u5834\u5730\u5740\n     *\/\n    private static function get_airport_address($airport) {\n        $addresses = array(\n            'TPE' => '\u6843\u5712\u570b\u969b\u6a5f\u5834',\n            'TSA' => '\u53f0\u5317\u677e\u5c71\u6a5f\u5834'\n        );\n        \n        return isset($addresses[$airport]) ? $addresses[$airport] : $addresses['TPE'];\n    }\n    \n    \/**\n     * \u622a\u65b7\u5730\u5740\u986f\u793a\n     *\/\n    private static function truncate_address($address, $length = 20) {\n        if (mb_strlen($address) > $length) {\n            return mb_substr($address, 0, $length) . '...';\n        }\n        return $address;\n    }\n    \n    \/**\n     * AJAX \u8655\u7406\u5668 - \u8a08\u7b97\u50f9\u683c\n     *\/\n    public static function ajax_calculate_price() {\n        \/\/ \u9a57\u8b49 nonce\n        if (!check_ajax_referer('9o_van_ajax_nonce', 'nonce', false)) {\n            wp_send_json_error('\u5b89\u5168\u9a57\u8b49\u5931\u6557');\n        }\n        \n        \/\/ \u6536\u96c6\u8cc7\u6599\n        $data = array(\n            'airport' => sanitize_text_field($_POST['airport'] ?? 'TPE'),\n            'destination_city' => sanitize_text_field($_POST['destination_city'] ?? ''),\n            'service_type' => sanitize_text_field($_POST['service_type'] ?? 'pickup'),\n            'service_time' => sanitize_text_field($_POST['service_time'] ?? ''),\n            'trip_type' => sanitize_text_field($_POST['trip_type'] ?? 'oneway'),\n            'main_address' => sanitize_text_field($_POST['main_address'] ?? ''),\n            'stops' => array(),\n            'addons' => array()\n        );\n        \n        \/\/ \u8655\u7406\u505c\u9760\u9ede\n        if (!empty($_POST['stops']) && is_array($_POST['stops'])) {\n            foreach ($_POST['stops'] as $stop) {\n                if (!empty($stop['address'])) {\n                    $data['stops'][] = array(\n                        'address' => sanitize_text_field($stop['address'])\n                    );\n                }\n            }\n        }\n        \n        \/\/ \u8655\u7406\u52a0\u8cfc\u9805\u76ee\n        $data['addons']['baby_seat'] = intval($_POST['baby_seat'] ?? 0);\n        $data['addons']['booster_seat'] = intval($_POST['booster_seat'] ?? 0);\n        $data['addons']['name_board'] = intval($_POST['name_board'] ?? 0);\n        \n        \/\/ \u8655\u7406\u56de\u7a0b\u8cc7\u6599\n        if ($data['trip_type'] === 'roundtrip') {\n            $data['return_data'] = array(\n                'time' => sanitize_text_field($_POST['return_time'] ?? ''),\n                'main_address' => sanitize_text_field($_POST['return_main_address'] ?? ''),\n                'stops' => array(),\n                'addons' => array(\n                    'baby_seat' => intval($_POST['return_baby_seat'] ?? 0),\n                    'booster_seat' => intval($_POST['return_booster_seat'] ?? 0),\n                    'name_board' => intval($_POST['return_name_board'] ?? 0)\n                )\n            );\n            \n            \/\/ \u56de\u7a0b\u505c\u9760\u9ede\n            if (!empty($_POST['return_stops']) && is_array($_POST['return_stops'])) {\n                foreach ($_POST['return_stops'] as $stop) {\n                    if (!empty($stop['address'])) {\n                        $data['return_data']['stops'][] = array(\n                            'address' => sanitize_text_field($stop['address'])\n                        );\n                    }\n                }\n            }\n        }\n        \n        \/\/ \u8a08\u7b97\u50f9\u683c\n        $breakdown = self::calculate_total_price($data);\n        \n        wp_send_json_success($breakdown);\n    }\n}\n\n\/\/ \u521d\u59cb\u5316\nadd_action('init', array('NineOVan_Airport_Calculator', 'init'));\n\n\/\/ \u8a3b\u518a AJAX \u8655\u7406\u5668\nadd_action('wp_ajax_calculate_airport_price', array('NineOVan_Airport_Calculator', 'ajax_calculate_price'));\nadd_action('wp_ajax_nopriv_calculate_airport_price', array('NineOVan_Airport_Calculator', 'ajax_calculate_price'));\n\n\/\/ \u63d0\u4f9b\u5168\u57df\u51fd\u6578\nif (!function_exists('_9o_van_calculate_airport_price')) {\n    function _9o_van_calculate_airport_price($data) {\n        return NineOVan_Airport_Calculator::calculate_total_price($data);\n    }\n}\n\nif (!function_exists('_9o_van_calculate_distance')) {\n    function _9o_van_calculate_distance($origin, $destination) {\n        return NineOVan_Airport_Calculator::calculate_distance($origin, $destination);\n    }\n}","active":true,"priority":13,"modified":"2025-09-14 02:10:19","revision":"1"}]}